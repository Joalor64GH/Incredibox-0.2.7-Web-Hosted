/* App version : 0.2.7 - Creation date : 2017-12-14 */ "use strict";
function isEmpty(a) {
    return 0 === Object.keys(a).length && a.constructor === Object;
}
function countObj(a) {
    var b,
        c = 0;
    for (b in a) a.hasOwnProperty(b) && c++;
    return c;
}
function existInArray(a, b) {
    for (var c = !1, d = 0, e = a.length; d < e; d++)
        if (a[d] === b) {
            c = !0;
            break;
        }
    return c;
}
function numberArray(a) {
    for (var b = 0, c = a.length; b < c; b++) a[b] = 0 | a[b];
    return a;
}
function windowPopup(a, b, c, d) {
    var e = d ? screen.height / 2 - c / 2 : 0,
        f = d ? screen.width / 2 - b / 2 : 0;
    window.open(a, "", "menubar=no,toolbar=no,resizable=yes,scrollbars=yes,width=" + b + ",height=" + c + ",top=" + e + ",left=" + f);
}
function networkOn() {
    hasNetwork = !0;
}
function networkOff() {
    hasNetwork = !1;
}
function networkState() {
    return inApp ? !(navigator.network.connection.type == Connection.NONE) : navigator.onLine;
}
function xhr(a, b, c, d, e) {
    var f = e || function () {};
    $.ajax({
        type: a,
        url: b,
        crossdomain: !0,
        data: c,
        success: function (a) {
            d(a, c);
        },
        error: f,
        dataType: "json",
    });
}
function checkFileName(a) {
    var b = checkMiniMobile() ? miniFile(a) : a;
    return b;
}
function changeFileName(a, b) {
    var c = a.substr(a.lastIndexOf("."));
    return a.split(c).join(b + c);
}
function miniFile(a) {
    var b = a.substr(a.lastIndexOf(".")),
        c = ".svg" != b ? a.split(b).join("-mini" + b) : a;
    return c;
}
function getMobileOperatingSystem() {
    var a = navigator.userAgent || navigator.vendor || window.opera;
    return /windows phone/i.test(a)
        ? "windows phone"
        : /android/i.test(a)
        ? "android"
        : /iPad/.test(a) && !window.MSStream
        ? "ipad"
        : /iPhone/.test(a) && !window.MSStream
        ? "iphone"
        : /iPod/.test(a) && !window.MSStream
        ? "ipod"
        : "unknown";
}
function iPadDevice() {
    return "ipad" == getMobileOperatingSystem();
}
function iPhoneDevice() {
    return "iphone" == getMobileOperatingSystem();
}
function iPodDevice() {
    return "ipod" == getMobileOperatingSystem();
}
function iPhone6sAndMore() {
    var a = device.model.toLowerCase();
    return a.indexOf("iphone8") > -1 || a.indexOf("iphone9") > -1;
}
function loadImg(a, b) {
    function c() {
        var a = e[g][0],
            b = e[g][1],
            c = new Image();
        (c.onload = function () {
            $(b).css({ "background-image": "url(" + a + ")" }), d();
        }),
            (c.onerror = function () {
                var b = a.split("/"),
                    c = b[b.length - 1];
                $boxDialog.open("Preloading IMG " + c, "ERROR", ["Reload", "Continue"], [gotoUrl, d], !0);
            }),
            (c.src = a);
    }
    function d() {
        g++;
        var a = g == f ? b : c;
        a();
    }
    var e = "object" != typeof a[0] ? [a] : a,
        f = e.length,
        g = 0;
    c();
}
function loadSnd(a, b, c, d) {
    var e = new XMLHttpRequest();
    e.open("GET", a, !0),
        (e.responseType = "arraybuffer"),
        (e.onload = function () {
            b.decodeAudioData(
                e.response,
                function (a) {
                    c(a);
                },
                function (a) {
                    d();
                }
            );
        }),
        (e.onerror = function () {
            d();
        }),
        e.send();
}
function gotoUrl(a) {
    var b = isnull(a) ? "index.html" : a;
    window.location.href = b;
}
function openURL(a, b) {
    (b = isnull(b) ? "_blank" : b), (b = inApp ? "_system" : b), window.open(a, b);
}
function openURLFromIframe(a) {
    window.top.location.href = a;
}
function redirectTo(a) {
    var b = "http://www.incredibox.com/url/" + a;
    if (inApp)
        switch (a) {
            case "facebook":
                b = isIOS ? "fb://page?id=182619895103489" : "fb://page/182619895103489";
                break;
            case "twitter":
                b = "https://twitter.com/incredibox_";
                break;
            case "instagram":
                b = "https://www.instagram.com/incredibox.official/";
                break;
            case "youtube":
                b = "https://www.youtube.com/c/incredibox";
        }
    openURL(b);
}
function getParameterByName(a, b) {
    b || (b = window.location.href), (b = b.toLowerCase()), (a = a.replace(/[\[\]]/g, "\\$&"));
    var c = new RegExp("[?&]" + a + "(=([^&#]*)|&|#|$)"),
        d = c.exec(b);
    return d ? (d[2] ? decodeURIComponent(d[2].replace(/\+/g, " ")) : "") : null;
}
function secToText(a) {
    var b = (parseInt((a % 1e3) / 100), parseInt((a / 1e3) % 60)),
        c = parseInt((a / 6e4) % 60),
        d = parseInt((a / 36e5) % 24);
    return (d = d < 10 ? "0" + d : d), (c = c < 10 ? "0" + c : c), (b = b < 10 ? "0" + b : b), c + ":" + b;
}
function getTime() {
    return new Date().getTime();
}
function getTimeAgo(a, b) {
    (a = a.indexOf("/") == -1 ? a.split("-").join("/") : a), (b = b.indexOf("/") == -1 ? b.split("-").join("/") : b);
    var c = new Date(a),
        d = new Date(b),
        e = d.getTime() - c.getTime(),
        f = timeConversion(e);
    return f === !1 ? getStringDate(a) : f;
}
function timeConversion(a) {
    var b = (a / 1e3).toFixed(1),
        c = (a / 6e4).toFixed(1),
        d = (a / 36e5).toFixed(1),
        e = (a / 864e5).toFixed(1),
        f = "";
    if (b < 60) {
        var g = Math.round(b);
        f = g.toString() + " " + STR(g < 2 ? "txt.tS1" : "txt.tS2");
    } else if (c < 60) {
        var h = Math.round(c);
        f = h.toString() + " " + STR(h < 2 ? "txt.tM1" : "txt.tM2");
    } else if (d < 23) {
        var i = Math.round(d);
        f = i.toString() + " " + STR(i < 2 ? "txt.tH1" : "txt.tH2");
    } else {
        if (!(e < 10)) return !1;
        var j = Math.round(e);
        f = j.toString() + " " + STR(j < 2 ? "txt.tJ1" : "txt.tJ2");
    }
    return STR("txt.ago").split("<time>").join(f);
}
function getDateNow() {
    var a = new Date(),
        b = a.getDate(),
        c = a.getMonth() + 1,
        d = a.getFullYear(),
        e = a.getHours(),
        f = a.getMinutes(),
        g = a.getSeconds();
    return (
        (b = b < 10 ? String("0" + b) : String(b)),
        (c = c < 10 ? String("0" + c) : String(c)),
        (e = e < 10 ? (e = String("0" + e)) : String(e)),
        (f = f < 10 ? (f = String("0" + f)) : String(f)),
        (g = g < 10 ? (g = String("0" + g)) : String(g)),
        String(d + "-" + c + "-" + b + " " + e + ":" + f + ":" + g)
    );
}
function jsonDecode(a) {
    if (isnull(a)) return null;
    var b = a.split("\t").join("").split("\n").join("");
    return JSON.parse(b);
}
function jsonEncode(a) {
    return isnull(a) ? null : JSON.stringify(a);
}
function random(a) {
    return Math.round(Math.random() * a);
}
function decimal(a, b) {
    b = isnull(b) ? 2 : b;
    var c = Math.pow(10, b);
    return Math.round(a * c) / c;
}
function numberSpaced(a) {
    var b = a.toString(),
        c = b.indexOf(".");
    return b.replace(/\d(?=(?:\d{3})+(?:\.|$))/g, function (a, b) {
        return c < 0 || b < c ? a + " " : a;
    });
}
function trim(a) {
    return isnull(a) ? "" : a.split("\t").join("").split("\n").join("");
}
function ucwords(a) {
    return a.charAt(0).toUpperCase() + a.slice(1);
}
function uniqid(a) {
    function b() {
        return Math.floor(65536 * (1 + Math.random()))
            .toString(16)
            .substring(1);
    }
    var c = a || "";
    return b() + c + b() + c + b() + c + b() + c + b();
}
function getUniqLink(a) {
    var b = notnull(a) ? a.app : app.version;
    return uniqid() + "-v" + b;
}
function isnull(a) {
    return null === a || void 0 === a || "undefined" === a;
}
function notnull(a) {
    return null !== a && void 0 !== a && "undefined" !== a;
}
function transitionEndEventName() {
    var a,
        b,
        c = document.createElement("div"),
        d = { transition: "transitionend", OTransition: "otransitionend", MozTransition: "transitionend", WebkitTransition: "webkitTransitionEnd" };
    for (a in d) if (d.hasOwnProperty(a) && c.style[a] !== b) return d[a];
    return null;
}
function animationEndEventName() {
    var a,
        b,
        c = document.createElement("div"),
        d = { animation: "animationend", OAnimation: "oanimationend", MozAnimation: "animationend", WebkitAnimation: "webkitAnimationEnd" };
    for (a in d) if (d.hasOwnProperty(a) && c.style[a] !== b) return d[a];
    return null;
}
function getCSSMatrix(a) {
    if (!isnull(a)) {
        var b = a.css("-webkit-transform") || a.css("-moz-transform") || a.css("-ms-transform") || a.css("-o-transform") || a.css("transform");
        return isnull(b) ? [1] : b.replace(/[^0-9\-.,]/g, "").split(",");
    }
    return [1];
}
function stopProp(a) {
    a.stopPropagation();
}
function onResize() {
    if (((screenW = window.innerWidth), (screenH = window.innerHeight), appLoaded)) {
        for (var a = 0; a < nbData; a++) listPicto[a].setPosition();
        for (a = 0; a < app.nbpolo; a++) listPolo[a].setPosition();
    }
}
function checkResize(a) {
    var b = $("#app-incredibox"),
        c = !isnull(a) && a;
    (screenW = inApp ? screen.width : window.innerWidth), (screenH = inApp ? screen.height : window.innerHeight), (screenW = inApp && isIOS ? screen.height : screenW), (screenH = inApp && isIOS ? screen.width : screenH);
    var d = !inApp;
    if ((inApp || ($(window).resize(onResize), (d = !0), emulate.test("LGH870"), $("#debugframe").width(screenW).height(screenH)), inApp || d)) {
        var e = Number((screenW / screenH).toFixed(1));
        if (e > 1.3) {
            var e = screenH / templateH,
                f = templateH,
                g = Math.round(screenW / e);
            (stageScale = Number(e.toFixed(3))), b.width(g), b.height(f), b.css({ transform: "scale(" + stageScale + ")" });
        } else b.width(screenW), b.height(screenH), (c = !1);
    }
    if (c) {
        (poloScale = 1.15),
            $("#box-stage").css({ transform: "scale(" + poloScale + ")", "transform-origin": "center bottom" }),
            $("#box-loader").css({ transform: "scale(" + poloScale + ")", "transform-origin": "center top" }),
            $("#stage-overflow").css({ height: Math.floor(400 / poloScale) + "px" }),
            (pictoScale = 1.15),
            $("#box-picto").css({ transform: "scale(" + pictoScale + ")" });
        var h = 1e3,
            i = 400,
            j = screenW,
            k = (j * i) / h,
            l = 116 * e + k,
            m = (f - 116) * e,
            n = l / e - (f - 252);
        n > m / e - (f - 252) && (n = m / e - (f - 252)), (n = Math.floor(n)), $("#box-video").css({ bottom: n * e + "px" }), $("#fade-video").css({ bottom: n * e + "px" });
        var o = "<style type='text/css'>";
        (o += "#game #box-bottom.bottomSlide{ transform:translate3d(0px," + n + "px,0px);}"), (o += "</style>"), $(o).appendTo("head");
    }
    if (checkMobile()) {
        $("body").addClass("mobile");
        var p = f / 1.3 - 20;
        $("#poplist").css({ height: p + "px" });
    }
    return (
        checkMiniMobile() &&
            $("img").each(function (a) {
                var b = $(this).attr("src");
                $(this).attr("src", miniFile(b));
            }),
        this
    );
}
function checkSystem() {
    var a = device.platform.toLowerCase();
    (isIOS = "ios" == a),
        (isAndroid = "android" == a),
        (isiPod = device.model.indexOf("iPod") != -1),
        (isiPhone = device.model.indexOf("iPhone") != -1),
        (isiPhone4s = isiPhone && device.model.indexOf("iPhone4,1") != -1),
        (isiPad = device.model.indexOf("iPad") != -1),
        (isiPadPro = isiPad && device.model.indexOf("6,") != -1),
        (isiPhone6s = isiPhone && device.model.indexOf("iPhone8,") != -1 && device.model.indexOf("iPhone8,4") == -1),
        (device.modelname = phoneModel.get(device.model)),
        (isMobile = checkMobile());
}
function checkInApp() {
    var a = document.URL;
    return a.indexOf("http://") === -1 && a.indexOf("https://") === -1;
}
function checkOnDevice() {
    return !!navigator.userAgent.match(/(iPhone|iPod|iPad|Android)/);
}
function checkTouchDevice() {
    return "ontouchstart" in window || navigator.MaxTouchPoints > 0 || navigator.msMaxTouchPoints > 0;
}
function checkMobile() {
    return (screenW = isnull(screenW) ? screen.width : screenW), (screenH = isnull(screenH) ? screen.height : screenH), screenW <= 768 && screenH <= 432;
}
function checkMiniMobile() {
    return screenW <= 568;
}
function checkSupported() {
    var a = !!window.HTMLCanvasElement,
        b = window.AudioContext || window.webkitAudioContext || !1,
        c = "string" == typeof new XMLHttpRequest().responseType,
        d = !isnull(transitionEnd) && !isnull(animationEnd);
    return (window.AudioContext = b), a ? (b ? (c ? (d ? "ok" : "CSS3 is not supported") : "XHR is not supported") : "Audio API is not supported") : "Canvas is not supported";
}
function bugBluetoothLatency() {
    return (
        !notnull(getParameterByName("bluetooth")) &&
        !!(inApp && isAndroid && contextAudio.baseLatency > 0.2) &&
        (bluetoothle.initialize(
            function (a) {
                switch (a.status) {
                    case "enabled":
                        bluetoothle.disable();
                        break;
                    case "disabled":
                        $("#fade-all").removeClass(),
                            $boxDialog.open(
                                STR("dial.bluetoothLatencyText"),
                                STR("dial.bluetoothLatencyTitle"),
                                [STR("bt.ok")],
                                [
                                    function () {
                                        window.location.href = "?v=" + appNumberVersion + "&bluetooth=1";
                                    },
                                ]
                            );
                }
            },
            { statusReceiver: !0 }
        ),
        !0)
    );
}
function bugSampleRate() {
    return !!(inApp && isIOS && contextAudio.sampleRate != desiredSampleRate && isnull(getParameterByName("r"))) && (contextAudio.close(), $("body").empty(), (window.location.href = "?v=" + appNumberVersion + "&r=1"), !0);
}
function checkAudioSource() {}
function newBoxDialog(a) {
    function b(a) {
        $(a.target).addClass("active");
        var b = !0;
        void 0 !== a.data.func && (a.data.func === c && (b = !1), a.data.func()), b && c();
    }
    function c() {
        d.close();
    }
    var d = $(a);
    (d.cntOpen = 0),
        (d.$bck = $(".bac", d)),
        (d.$box = $(".box", d)),
        (d.$scale = $(".scale", d)),
        (d.$pop = $(".pop", d)),
        (d.$pop.$title = $(".title", d)),
        (d.$pop.$text = $(".text", d)),
        (d.$pop.$content = $(".content", d)),
        d.$box.bind(evtPress, stopProp),
        (d.opened = !1);
    var e = getCSSMatrix(d.$scale);
    isNaN(parseInt(e[0])) || isnull(e[0]) ? 1 : e[0];
    return (
        (d.open = function (a, e, f, g, h) {
            (d.opened = !0),
                (a = isnull(a) ? "Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod" : a),
                (e = isnull(e) ? "Info" : e),
                (f = isnull(f) ? ["Close"] : f),
                (g = isnull(g) ? [c] : g),
                (h = !isnull(h) && h),
                d.cntOpen++,
                d.addClass("show"),
                d.$bck.fadeIn(),
                d.$pop.clean(),
                d.$pop.$title.html(e),
                d.$pop.$text.html(a);
            for (var i = 0, j = f.length; i < j; i++) {
                g[i];
                d.$pop.$content.append('<div class="bt bt-mini light" id="bt-mini' + i + '"><div class="txt">' + f[i] + '</div><div class="hitzone"></div></div>'),
                    d.$pop.$content
                        .find("#bt-mini" + i)
                        .unbind()
                        .bind(evtClick, { func: g[i] }, b);
            }
            1 == d.cntOpen && d.$box.open(), h && d.css({ "z-index": "9999" });
        }),
        (d.close = function () {
            (d.opened = !1), 1 == d.cntOpen && (d.$box.close(), d.$bck.fadeOut()), d.cntOpen--, d.cntOpen < 0 && (d.cntOpen = 0);
        }),
        (d.$bck.fadeIn = function (a) {
            a ? this.addClass("mini") : this.removeClass("mini"), this.addClass("animateFadeIn");
        }),
        (d.$bck.fadeOut = function () {
            this.addClass("animateFadeOut").one(animationEnd, function (a) {
                $(a.target).removeClass("animateFadeIn animateFadeOut");
            });
        }),
        (d.$box.open = function () {
            this.removeClass("open close").addClass("open");
        }),
        (d.$box.close = function () {
            this.find(".bt-mini").unbind(),
                this.removeClass("open")
                    .addClass("close")
                    .one(animationEnd, function (a) {
                        0 == d.cntOpen && ($(a.target).removeClass("close"), d.removeClass("show"));
                    });
        }),
        (d.$pop.clean = function () {
            this.$content.find(".bt-mini").unbind(), this.$content.empty();
        }),
        d
    );
}
function newPopup(a) {
    function b(a, b) {
        h && ((a.id == m && b !== !0) || (a.addClass("active"), a.$mypop.addClass("active"), isnull(l) || a.id == m || (l.removeClass("active"), l.$mypop.removeClass("active"), d()), (l = a), (m = a.id)));
    }
    function c() {
        h && b(i[0], 0, !0);
    }
    function d() {
        if (h) {
            var a = $boxPoptab.onCloseFunc[l.$mypop.attr("id")];
            isnull(a) || a();
        } else isnull(g.funcOnClose) || (g.funcOnClose(), (g.funcOnClose = null));
    }
    function e(a) {
        var b = !1,
            c = isTouchDevice ? a.originalEvent.targetTouches[0] : a,
            d = Math.round(c.pageY);
        h ? d > 100 * stageScale && (b = !0) : (b = !0), b && ($body.unbind(evtPress, e), g.close());
    }
    function f() {
        "" != k.type && g.$pop.addClass(k.type), "mini" == k.bck && g.addClass(k.bck);
    }
    var g = $(a);
    (g.$bck = $(".bac", g)), (g.$box = $(".box", g)), (g.$scale = $(".scale", g)), (g.$poplist = $(".box .pop", g)), (g.$boxtab = $(".box .box-tab", g)), (g.$pop = g.$poplist), g.$box.bind(evtPress, stopProp), (g.opened = !1);
    var h = !isnull(g.$boxtab[0]),
        i = [],
        j = getCSSMatrix(g.$scale),
        k = (isNaN(parseInt(j[0])) || isnull(j[0]) ? 1 : j[0], {});
    (g.open = function (a) {
        (g.opened = !0), (k = isnull(a) ? { type: "", bck: "", unlock: !1, lockCenter: !1 } : a), f(), this.addClass("show"), this.$bck.fadeIn(), this.$box.open(), c();
    }),
        (g.close = function () {
            (g.opened = !1), "action" == k.type && this.$pop.$icon.unbind(), this.$bck.unbind(), this.$box.close(), this.$bck.fadeOut();
        }),
        (g.$box.open = function (a) {
            isnull(a) || ((k = a), f()),
                this.addClass("slideUp").one(animationEnd, function (a) {
                    "action" == k.type
                        ? g.$pop.$icon.bind(evtClick, function () {
                              g.close();
                          })
                        : $body.bind(evtPress, e),
                        k.unlock && unlock();
                });
        }),
        (g.$box.close = function (a) {
            this.removeClass("slideUp")
                .addClass("slideDown")
                .one(animationEnd, function (b) {
                    $(b.target).removeClass("slideDown"), d(), isnull(a) || a();
                });
        }),
        (g.$bck.fadeIn = function () {
            this.addClass("animateFadeIn");
        }),
        (g.$bck.fadeOut = function () {
            this.addClass("animateFadeOut").one(animationEnd, function (a) {
                g.removeClass("show"), g.removeClass(k.bck), $(a.target).removeClass("animateFadeIn animateFadeOut");
            });
        });
    var l = null,
        m = -1;
    return (
        h &&
            $(".tab", g.$boxtab).each(function (a) {
                var c = $(this);
                i.push(c),
                    (c.id = a),
                    (c.$mypop = g.$box.find(".pop").eq(a)),
                    c.bind(evtClick, function (a) {
                        b(c);
                    });
            }),
        g
    );
}
function initFuncPoptab() {
    $boxPoptab.onCloseFunc = {
        "pop-tuto": function () {
            a.reinit();
        },
    };
    var a = $boxPoptab.find("#pop-tuto .slideshow");
    (a.$box = $boxPoptab.find("#pop-tuto .slideshow .img-box")), (a.$nav = $boxPoptab.find("#pop-tuto .slideshow .nav-box")), (a.$btL = $boxPoptab.find("#pop-tuto .bt").first()), (a.$btR = $boxPoptab.find("#pop-tuto .bt").last());
    var b = Math.floor((3 * screenW) / templateW);
    b < 0 && (b = 1),
        (a.init = function () {
            for (var a = this, c = 0, d = 0, e = 0, f = 0, g = this.width(), h = this.find("img").length, i = 0; i < h; i++) a.$nav.append('<div class="pt"></div>');
            (this.onPress = function (b) {
                $body.unbind(evtPressEnd, a.onRelease), a.$box.unbind(evtMove, a.onMove), (b = isTouchDevice ? b.originalEvent.touches[0] : b), (c = b.pageX), a.$box.bind(evtMove, a.onMove), $body.bind(evtPressEnd, a.onRelease);
            }),
                (this.onMove = function (e) {
                    (e = isTouchDevice ? e.originalEvent.touches[0] : e), (d = Math.round(c - e.pageX) * -1), a.$box.css({ transform: "translateX(" + (f + d / b) + "px)" });
                }),
                (this.onRelease = function () {
                    $body.unbind(evtPressEnd, a.onRelease), a.$box.unbind(evtMove, a.onMove), d < -100 ? (e != h - 1 ? a.slide("left") : a.slide()) : d > 100 && 0 !== e ? a.slide("right") : a.slide(), (c = 0), (d = 0);
                }),
                (this.slide = function (b) {
                    $body.unbind(evtPressEnd, a.onRelease),
                        a.$box.unbind(evtMove, a.onMove),
                        a.$box.addClass("slide"),
                        "left" === b ? e++ : "right" === b && e--,
                        (f = -(g * e)),
                        a.$box.css({ transform: "translateX(" + String(f) + "px)" }),
                        a.light();
                }),
                (this.clickLeft = function () {
                    0 !== e && a.slide("right");
                }),
                (this.clickRight = function () {
                    e != h - 1 && a.slide("left");
                }),
                (this.light = function () {
                    a.$nav.find(".pt").removeClass("active"),
                        a.$nav.find(".pt").eq(e).addClass("active"),
                        a.$btL.removeClass("disable"),
                        a.$btR.removeClass("disable"),
                        0 === e && a.$btL.addClass("disable"),
                        e == h - 1 && a.$btR.addClass("disable");
                }),
                (this.reinit = function () {
                    (c = d = e = f = 0), a.slide();
                }),
                a.$box.bind(evtPress, a.onPress),
                this.light(),
                this.$btL.bind(evtClick, this.clickLeft),
                this.$btR.bind(evtClick, this.clickRight);
        }),
        a.init();
}
function initFuncPopup(a) {
    var b = a;
    (b.$pop.$title = b.$pop.find(".title")),
        (b.$pop.$text = b.$pop.find(".text")),
        (b.$pop.$content = b.$pop.find(".content")),
        (b.$pop.$icon = b.$pop.find(".icon")),
        (b.$pop.clean = function () {
            this.removeClass("info"), this.removeClass("action"), this.removeClass("open"), this.removeClass("close"), this.$icon.unbind(), this.$content.find(".bt").unbind(), this.$content.empty(), this.$title.empty(), this.$text.empty();
        }),
        (b.$pop.reflow = function () {
            this.$title.is(":empty") ? this.$title.hide() : this.$title.show(), this.$text.is(":empty") ? this.$text.hide() : this.$text.show(), this.$content.is(":empty") ? this.$content.hide() : this.$content.show();
        });
}
function changeDomTxt() {
    var a = translateObj.trad;
    if (
        ($("#home .bt#home-bt-switch .txt").html(a.bt.version),
        $("#home .bt#home-bt-list .txt").html(a.bt.mixList),
        $("#mixlist .tab#tab-mymix").html(a.bt.myMix),
        $("#mixlist .tab#tab-top50").html(a.bt.top50),
        $("#mixlist .tab#tab-latest").html(a.bt.latest),
        $("#mixlist .tab-filter #bt-week .txt").html(a.bt.week),
        $("#mixlist .tab-filter #bt-month .txt").html(a.bt.month),
        $("#mixlist .tab-filter #bt-all .txt").html(a.bt.all),
        $("#mixlist .scroll:not(#list-mymix) .infoListmix").html(a.txt.top50Info),
        $("#mixlist #list-latest .boxinfo").html(a.txt.top50Info),
        $("#mixlist #list-week .boxinfo").html(a.txt.top50Info),
        $("#mixlist #list-month .boxinfo").html(a.txt.top50Info),
        $("#mixlist #list-all .boxinfo").html(a.txt.top50Info),
        $("#mixlist .box-info .offline .linked .txt").html(a.txt.offline),
        $("#watch-info .linked .txt").html(a.txt.offline),
        notnull(localMixObject))
    ) {
        var b = STR(0 == localMixObject.getAllMixByVersion().length ? "txt.mixlistEmpty" : "txt.mixlistInfo");
        $("#list-mymix .boxinfo", $poplist).html(b);
    }
    $("#watch-info .linked .txt").html(a.txt.offline),
        $("#watch-info .date, .box-info .date").each(function () {
            if ($(this).attr("data-date")) {
                var a = $(this).attr("data-date");
                $(this).html(getStringDate(a));
            }
        }),
        reinitLatestList(),
        $("#pop-tab .tab#tab-credit").html(a.bt.credit),
        $("#pop-tab #pop-credit #copy").html(a.txt.copyright),
        $("#pop-tab #pop-credit #team").html(a.txt.team),
        $("#pop-tab #pop-credit .title").html(a.txt.stayTuned),
        $("#pop-tab #pop-credit .bt#contact .msg").html(a.bt.contact),
        $("#pop-tab .tab#tab-tuto").html(a.bt.tuto),
        $("#pop-tab .tuto1 .txt").html(a.txt.tuto1),
        $("#pop-tab .tuto2 .txt").html(a.txt.tuto2),
        $("#pop-tab .tuto3 .txt").html(a.txt.tuto3),
        $("#pop-tab .tuto4 .txt").html(a.txt.tuto4),
        $("#pop-tab .tuto5 .txt").html(a.txt.tuto5),
        $("#pop-tab .tab#tab-param").html(a.bt.param),
        $("#pop-tab #pop-param .title#title-lang").html(a.txt.language),
        $("#pop-tab #pop-param .title#title-comments").html(a.txt.comments),
        $("#pop-tab #pop-param #bt-rating .msg").html(a.bt.rate),
        $("#pop-tab .tab#tab-follow").html(a.bt.follow),
        $("#pop-tab #pop-follow .title#git").html(a.bt.git),
        $("#pop-tab #pop-follow .title#shop").html(a.txt.visitShop),
        $("#pop-switch .title").html(a.txt.enjoyVersion);
}
function loadLanguage(a, b) {
    var c = notnull(b) ? b : storage.getItem("user-lang") || "en";
    $("#pop-param .box-lang .bt-mini#bt-lang-" + c).addClass("active"),
        "undefined" != typeof translateObj && $("body").removeClass("lang-" + translateObj.code.toLowerCase()),
        $.getScript("./lang/" + c + ".js")
            .done(function (b, d) {
                storage.setItem("user-lang", c), icloud.save("user-lang", c), $("body").addClass("lang-" + translateObj.code.toLowerCase()), isnull(a) || a();
            })
            .fail(function (a, b, c) {
                return storage.setItem("user-lang", "en"), icloud.save("user-lang", "en"), $boxDialog.open("Impossible to load language settings. Please reload or force to quit the app then retry.", "ERROR", ["Reload"], [gotoUrl], !0), !1;
            });
}
function clickBtLang(a) {
    var b = $(a.currentTarget),
        c = b.attr("id").split("bt-lang-").join("");
    b.hasClass("active") || ($("#pop-param .box-lang .bt-mini").removeClass("active"), b.addClass("active"), loadLanguage(changeDomTxt, c));
}
function STR(a) {
    for (var b = a.split("."), c = translateObj.trad, d = 0, e = b.length; d < e; d++) {
        var f = b[d];
        if (!(f in c)) return;
        c = c[f];
    }
    return c;
}
function getMixFromCloud(a, b) {
    var c = a,
        d = b,
        e = 0,
        f = 0,
        g = !1;
    for (var h in c)
        if (h.indexOf("mix-") > -1) {
            e++, (g = !1);
            for (var i in d)
                if (h == i) {
                    g = !0;
                    break;
                }
            if (!g) {
                f++;
                var j = jsonDecode(c[h]);
                (j.mymix = !0), (j.link = isnull(j.link) ? getUniqLink(j) : j.link), h.indexOf("-IOSV") == -1 && h.indexOf("-v") == -1 ? (icloud.remove(h), localMixObject.saveMix(j)) : localMixObject.saveMix(j, !1);
            }
        }
}
function deleteLocalMix(a, b) {
    var c = a,
        d = b,
        e = 0,
        f = !1;
    for (var g in d) {
        f = !1;
        for (var h in c)
            if (g == h) {
                f = !0;
                break;
            }
        f || (e++, localMixObject.deleteMix(g));
    }
}
function sendMixInCloud(a) {
    var b = a;
    for (var c in b) icloud.save(c, b[c]);
}
function estimateSpeed() {}
function onDeviceReady() {
    if ((estimateSpeed(), inApp))
        if (((window.open = cordova.InAppBrowser.open), document.addEventListener("pause", onPause, !1), document.addEventListener("resume", onResume, !1), checkSystem(), isIOS)) {
            iosVersion = device.version;
            var a = iosVersion.split(".");
            (iosVersionNumber = Number(a[0] + "" + a[1])), (desiredSampleRate = iPhone6sAndMore() ? 48e3 : desiredSampleRate);
        } else
            isAndroid &&
                (window.addEventListener("native.keyboardshow", keyboardOpen),
                window.addEventListener("native.keyboardhide", keyboardClose),
                document.addEventListener(
                    "backbutton",
                    function (a) {
                        a.preventDefault(), onGame ? (modeRandom && stopRandomMode(), loopOn ? stopAllStage() : ($boxDialog.opened && $boxDialog.close(), $boxPopup.opened && $boxPopup.close(), backToHome())) : gotoUrl();
                    },
                    !1
                ));
    else
        document.ontouchmove = function (a) {
            a.preventDefault();
        };
    isMixReplay && ((isiPod = iPodDevice()), (isiPhone = iPhoneDevice()), (isiPad = iPadDevice()), (isIOS = isiPod || isiPhone || isiPad)),
        (evtClick = isTouchDevice ? "touchstart" : "click"),
        (evtPress = isTouchDevice ? "touchstart" : "mousedown"),
        (evtPressEnd = isTouchDevice ? "touchend" : "mouseup"),
        (evtMove = isTouchDevice ? "touchmove" : "mousemove");
    var b = inApp ? document : window;
    b.addEventListener("online", networkOn, !1),
        b.addEventListener("offline", networkOff, !1),
        (hasNetwork = networkState()),
        (transitionEnd = transitionEndEventName()),
        (animationEnd = animationEndEventName()),
        $(document).ready(function () {
            checkResize(!0),
                ($boxDialog = newBoxDialog("#pop-dialog")),
                "ok" === checkSupported()
                    ? ((contextCanvas = $("#cnvGame")[0].getContext("2d")),
                      (contextAudio = new AudioContext()),
                      loadLanguage(function () {
                          bugBluetoothLatency() ||
                              bugSampleRate() ||
                              (checkAudioSource(),
                              loadAppFile(function () {
                                  var a = checkFileName("asset-v" + appVersion + "/splash/Default-Landscape@2x~ipad.png"),
                                      b = checkFileName("asset-v" + appVersion + "/img/home-version@2x.png"),
                                      c = isMixReplay ? "img/titre-mode-replay@2x.png" : checkFileName("asset-v" + appVersion + "/img/home-titre@2x.png");
                                  loadImg(
                                      [
                                          [a, "#img-bck"],
                                          [b, "#img-version"],
                                          [c, "#img-titre"],
                                      ],
                                      function () {
                                          initJqueryVar(),
                                              initHomeCSS(),
                                              changeDomTxt(),
                                              initMixlist(),
                                              $homeBck.addClass("animate").one(animationEnd, function () {
                                                  $homeBck.removeClass("animate");
                                              }),
                                              $fadeAll.addClass("animateOut").one(animationEnd, function () {
                                                  var a = isMixReplay ? tryToLoadMix : showHome;
                                                  loadTestSound(a);
                                              });
                                      }
                                  );
                              }));
                      }))
                    : $boxDialog.open(checkSupported(), "ERROR", [], [], !0);
        });
}
function loadAppFile(a) {
    $.getScript("./asset-v" + appVersion + "/app.js")
        .done(a)
        .fail(function (a, b, c) {
            $boxDialog.open("App file not found. Please reload or force to quit the app then retry.", "ERROR", ["Reload"], [gotoUrl], !0);
        });
}
function initJqueryVar() {
    ($body = $("body")),
        ($lockAll = $("#lock-all").bind(evtPress, stopProp)),
        ($lockPause = $("#lock-pause").bind(evtClick, clickBtClock)),
        ($lockStage = $("#lock-stage")),
        ($fadeAll = $("#fade-all")),
        ($mixlist = $("#mixlist")),
        ($mixlist.$pop = $("#poplist")),
        ($mixlist.$bck = $("#mixlist .bac")),
        ($mixlist.$pop.$spinner = $("#poplist .spinner")),
        isMixReplay ||
            (($tabMymix = $("#tab-mymix").bind(evtClick, openTabMymix)),
            ($tabLatest = $("#tab-latest").bind(evtClick, openTabLatest)),
            ($tabTop50 = $("#tab-top50").bind(evtClick, openTabTop50)),
            ($tabTop50.$btWeek = $(".tab-filter #bt-week").bind(evtClick, clickBtFilter)),
            ($tabTop50.$btMonth = $(".tab-filter #bt-month").bind(evtClick, clickBtFilter)),
            ($tabTop50.$btAll = $(".tab-filter #bt-all").bind(evtClick, clickBtFilter))),
        ($home = $("#home")),
        ($homeBck = $("#home #img-bck")),
        ($homeVersion = $("#home #img-version")),
        ($homeTitre = $("#home #img-titre")),
        ($homeLoadbox = $("#home #load-box")),
        ($homeLoadbar = $("#home #load-box #load-bar")),
        ($homeBtPlay = $("#home #home-bt-play")),
        ($homeBtList = $("#home #home-bt-list")),
        ($homeBtSwitch = $("#home #home-bt-switch")),
        ($homeBtInfo = $("#home #home-bt-info")),
        ($homeBtListen = $("#home #home-bt-listen")),
        ($gameTouch = $("#game-touch")),
        ($boxBt = $("#box-bt")),
        ($boxBt2 = $("#box-bt2")),
        ($btBack = $("#bt-back")),
        ($btTool = $("#bt-tool")),
        ($btTool.$bck = $("#bt-tool .bck")),
        ($btTool.$bckimg = $("#bt-tool .bckimg")),
        ($btTool.bounce = function () {
            this.addClass("animateBounce").one(animationEnd, function (a) {
                $(a.target).removeClass("animateBounce");
            });
        }),
        ($btStop = $("#bt-stop")),
        ($btRandom = $("#bt-random")),
        ($btRecord = $("#bt-record")),
        ($btHome = $("#bt-home")),
        ($btCreate = $("#bt-create")),
        ($btClock = $("#bt-clock")),
        ($cntRecord = $("#cnt-record")),
        ($btSave = $("#bt-save")),
        ($boxVideo = $("#box-video")),
        ($fadeVideo = $("#fade-video")),
        ($boxTop = $("#box-top")),
        ($boxBottom = $("#box-bottom")),
        ($lockPicto = $("#lock-picto")),
        ($lockBonus = $("#lock-bonus")),
        ($lockBonus.$btLike = $("#lock-bonus .bt#bt-like")),
        ($watchInfo = $("#watch-info")),
        ($watchInfo.$title = $("#watch-info .title")),
        ($watchInfo.$name = $("#watch-info .name")),
        ($watchInfo.$dedi = $("#watch-info .dedi")),
        ($watchInfo.$date = $("#watch-info .date")),
        ($watchInfo.$view = $("#watch-info .viewed")),
        ($watchInfo.$like = $("#watch-info .liked")),
        ($watchInfo.$link = $("#watch-info .linked")),
        ($boxPopup = newPopup(".box-popup#pop-popup")),
        initFuncPopup($boxPopup),
        ($boxPoptab = newPopup(".box-popup#pop-tab")),
        initFuncPoptab(),
        ($boxSwitch = newPopup(".box-popup#pop-switch")),
        $(".box-popup#pop-switch #icon" + appVersion + " .bul").addClass("open"),
        $(".box-popup#pop-switch .icon").bind(evtClick, function (a) {
            var b = $(this).attr("id").split("icon").join("");
            b != appVersion &&
                (lock(),
                $(".box-popup#pop-switch #icon" + appVersion + " .bul").addClass("close"),
                $(this)
                    .find(".bul")
                    .addClass("open")
                    .one(animationEnd, function () {
                        $("#fade-all")
                            .addClass("animateIn")
                            .one(animationEnd, function () {
                                window.location.href = isDevice ? "app.html?v=" + b : "app.html?v=" + b;
                            });
                    }));
        }),
        $("#pop-param .box-lang .bt-mini").bind(evtClick, clickBtLang),
        $("#pop-param .bt#bt-feedback").bind(evtClick, sendFeedback),
        $("#pop-param .bt#bt-rating").bind(evtClick, function (a) {
            openURL(isAndroid ? appAndroid.url : appIOS.url);
        }),
        $("#pop-credit .bt#contact").bind(evtClick, function () {
            redirectTo("form");
        }),
        $("#pop-follow .bt.facebook").bind(evtClick, function () {
            redirectTo("facebook");
        }),
        $("#pop-follow .bt.twitter").bind(evtClick, function () {
            redirectTo("twitter");
        }),
        $("#pop-follow .bt.instagram").bind(evtClick, function () {
            redirectTo("instagram");
        }),
        $("#pop-follow .bt.youtube").bind(evtClick, function () {
            redirectTo("youtube");
        }),
        $("#pop-follow #img-shop").bind(evtClick, function () {
            redirectTo("shop");
        });
}
function loadTestSound(a) {
    var b = new XMLHttpRequest();
    b.open("GET", "snd/soundtest.mp3", !0),
        (b.responseType = "arraybuffer"),
        (b.onload = function () {
            contextAudio.decodeAudioData(
                b.response,
                function (b) {
                    (sndTest = new SoundObject(contextAudio)), sndTest.checkSoundCanPlay(b, a);
                },
                function (a) {
                    errorTabToLoad("soundtest.mp3");
                }
            );
        }),
        (b.onerror = function () {
            errorTabToLoad("soundtest.mp3");
        }),
        b.send();
}
function initHomeCSS() {
    var a = "";
    (a += '#game #box-bck{ background-image: url("' + app.folder + 'img/game-bck.png"); }'),
        (a += "#game #bt-create .bck { background-color:" + app.col1 + "; }"),
        (a += "#game #bt-create:active .bck { background-color:" + app.col3 + "; }"),
        (a += '#home #home-bt-more{ background-image: url("' + app.folder + 'img/home-bt-more@2x.png"); }'),
        (a += ".spinner.blue .spin { border-right-color:" + app.col1 + "; }"),
        (a += ".spinner.blue .bckspin { opacity: .4; border-color:" + app.col1 + "; }"),
        (a += "#home #home-present { color:" + app.col1 + "; }"),
        (a += "#home #load-box .scale{ border-color:" + app.col3 + "; }"),
        (a += "#home #load-box .scale #load-bar { background-color:" + app.col3 + "; }"),
        (a += "#home .bt .txt { color:" + app.col0 + "; }"),
        (a += "#home .bt#home-bt-listen .txt { color:#FFFFFF; }"),
        (a += "#home .bt .bck { background-color:" + app.col1 + "; }"),
        (a += "#home .bt:active .bck { background-color:" + app.col3 + "; }"),
        (a += ".tab { background-color:" + app.col3 + "; color:" + app.col0 + "; }"),
        (a += ".tab.active { background-color:" + app.col1 + "; }"),
        (a += "#mixlist .tab-filter { background-color:" + app.col1 + "; }"),
        (a += "#mixlist .tab-filter .bt-mini .txt{ color:" + app.col1 + "; }"),
        (a += "#mixlist .tab-filter .bt-mini:active{ background-color:" + app.col3 + "; }"),
        (a += ".bt-mini.color { background-color:" + app.col2 + "; color:" + app.col0 + "; }"),
        (a += ".bt-mini.color.active { background-color:" + app.col3 + "; color:#FFF; }"),
        (a += "#mixlist #poplist .box-info .repere { background-color:" + app.col0 + "; }"),
        (a += "#mixlist #poplist .box-info .star-txt { color:" + app.col0 + "; }"),
        $('<style type="text/css">' + a + "</style>").appendTo("head");
}
function preparerArray() {
    (frameTotal = app.totalframe),
        (frameHalf = frameTotal / 2),
        (tabBuffer = []),
        (tabAnime = []),
        (nbSound = app.animearray.length),
        (nbSoundBonus = app.bonusarray.length),
        (nbSoundTotal = 2 * nbSound + nbSoundBonus + 1),
        (nbSoundLoaded = 0),
        (nbBonus = app.bonusarray.length),
        (nbBonusLoaded = 0),
        (nbAnime = app.animearray.length),
        (nbAnimeLoaded = 0),
        (nbData = app.animearray.length),
        (nbDataLoaded = 0),
        (nbImage = 0),
        (nbImageLoaded = 0),
        (spritePolo = null),
        (spritePicto = null),
        (cntTotalAsset = 0),
        (nbTotalAsset = nbSoundTotal + nbBonus + nbAnime + nbData + 2),
        (tabToLoad = []),
        (cntLoad = 0);
    var a = 0,
        b = 0,
        c = "";
    for (a = 0; a < nbSound; a++) tabBuffer.push([0, 0]), tabAnime.push({ imgSprite: null, ratio: null, width: null, height: null, headWidth: null, headHeight: null, totalFrames: null, imgData: null, color: app.animearray[a].color });
    for (a = 0; a < nbSoundBonus; a++) tabBuffer.push([0]), createMetaBonus(a);
    for (
        tabBuffer.push([0]),
            c = app.spritepolo,
            c = isiPhone4s ? changeFileName(c, "-mini") : c,
            tabToLoad = [
                { func: loadImage, params: [c, "spritePolo"] },
                { func: loadImage, params: [app.spritepicto, "spritePicto"] },
            ],
            a = 0;
        a < nbSound;
        a++, b++
    )
        app.animearray[a].uniqsnd
            ? (tabToLoad.push({ func: loadSound, params: [app.animearray[a].soundA, b, 0, !0] }), nbTotalAsset--)
            : (tabToLoad.push({ func: loadSound, params: [app.animearray[a].soundA, b, 0] }), tabToLoad.push({ func: loadSound, params: [app.animearray[a].soundB, b, 1] }));
    for (a = 0; a < nbSoundBonus; a++, b++) tabToLoad.push({ func: loadSound, params: [app.bonusarray[a].sound, b, 0] }), tabToLoad.push({ func: loadVideoBonus, params: [app.bonusarray[a].src, a] });
    tabToLoad.push({ func: loadSound, params: [app.sndaspire, b, 0] });
    for (var a = 0; a < nbAnime; a++)
        (c = app.animearray[a].animeData),
            tabToLoad.push({ func: loadAnimeData, params: [c, a] }),
            (c = app.animearray[a].anime),
            (c = isiPhone4s ? changeFileName(app.animearray[a].anime, "-mini") : c),
            tabToLoad.push({ func: loadAnime, params: [c, a] });
    checkTabToLoad();
}
function checkTabToLoad() {
    updatePreload(), cntLoad < tabToLoad.length && (tabToLoad[cntLoad].func(tabToLoad[cntLoad].params), cntLoad++);
}
function errorTabToLoad(a) {
    $boxDialog.open('Error loading asset<br><i>"' + a.split("./").join("") + '"</i>', "LOADING BUG", ["Reload"], [gotoUrl], !0);
}
function updatePreload() {
    cntTotalAsset++;
    var a = Math.round((cntTotalAsset / nbTotalAsset) * 100);
    (a = a > 100 ? 100 : a), $homeLoadbar.css({ width: String(a) + "%" }), cntTotalAsset == nbTotalAsset && (createGame(), hideHomeLoadbar());
}
function loadImage(a) {
    var b = a[0],
        c = a[1];
    nbImage++;
    var d = "./" + app.folder + "img/" + b,
        e = new Image();
    (e.onload = function () {
        (window[c] = this), checkTabToLoad();
    }),
        (e.onerror = function () {
            errorTabToLoad(d);
        }),
        (e.src = d);
}
function loadSound(a) {
    var b = a[0],
        c = a[1],
        d = a[2],
        e = !isnull(a[3]) && a[3],
        f = "./" + app.folder + "sound/" + b,
        g = new XMLHttpRequest();
    g.open("GET", f, !0),
        (g.responseType = "arraybuffer"),
        (g.onload = function () {
            contextAudio.decodeAudioData(
                g.response,
                function (a) {
                    (tabBuffer[c][d] = a), e && (tabBuffer[c][1] = a), checkTabToLoad();
                },
                function (a) {
                    $boxDialog.open('Error decoding asset "' + f + '"', "AUDIO BUG", ["Reload"], [gotoUrl], !0);
                }
            );
        }),
        (g.onerror = function () {
            errorTabToLoad(f);
        }),
        g.send();
}
function loadAnimeData(a) {
    var b = a[0],
        c = a[1],
        d = "./" + app.folder + "anime/" + b,
        e = new XMLHttpRequest();
    e.open("GET", d, !0),
        (e.responseType = "json"),
        (e.onload = function () {
            for (var a = e.response, b = a.arrayFrame, d = b.length, f = [], g = 0; g < d; g++) {
                var h = b[g].prop.split(",");
                f.push([parseInt(h[0]), parseInt(h[1]), parseInt(h[2]), parseInt(h[3])]);
            }
            (tabAnime[c].imgData = f), (tabAnime[c].headHeight = a.headHeight), checkTabToLoad();
        }),
        (e.onerror = function () {
            errorTabToLoad(d);
        }),
        e.send();
}
function loadAnime(a) {
    var b = a[0],
        c = a[1],
        d = "./" + app.folder + "anime/" + b,
        e = new Image();
    (e.onload = function () {
        (tabAnime[c].imgSprite = e), checkTabToLoad();
    }),
        (e.onerror = function () {
            errorTabToLoad(d);
        }),
        (e.src = d);
}
function loadVideoBonus(a) {
    var b = checkFileName(a[0]),
        c = "./" + app.folder + "video/" + b,
        d = a[1] + 1,
        f = document.createElement("video");
    (f.type = "video/mp4"),
        f.setAttribute("playsinline", "playsinline"),
        f.setAttribute("webkit-playsinline", "webkit-playsinline"),
        $boxVideo.append("<div class='video' id='video" + d + "' webkit-playsinline></div>"),
        $boxVideo.find(".video#video" + d).append(f);
    var g = new XMLHttpRequest();
    (g.onload = function () {
        (f.src = window.URL.createObjectURL(this.response)), checkTabToLoad();
    }),
        (g.onerror = function () {
            alert("Error " + e.target.status + " occurred while receiving the document.");
        }),
        g.open("GET", c),
        (g.responseType = "blob"),
        g.send();
}
function createMetaBonus(a) {
    var b = a + 1,
        c = '<div class="bt-bonus" id="bt-bonus-' + b + '""><div class="circle"></div><div class="quarter">';
    (c +=
        '<div class="svg q0"><svg x="0px" y="0px" width="44px" height="44px" viewBox="0 0 44 44"><path d="M22,0C9.8,0,0,9.8,0,22s9.8,22,22,22s22-9.8,22-22S34.2,0,22,0z M22,30c-4.4,0-8-3.6-8-8s3.6-8,8-8s8,3.6,8,8S26.4,30,22,30z"/></svg></div>'),
        (c += '<div class="svg q1"><svg x="0px" y="0px" width="44px" height="44px" viewBox="0 0 44 44"><path d="M29.6,19.5l13.3-4.3C40.1,6.4,31.8,0,22,0v14C25.6,14,28.6,16.3,29.6,19.5z"/></svg></div>'),
        (c +=
            '<div class="svg q2"><svg x="0px" y="0px" width="44px" height="44px" viewBox="0 0 44 44"><path d="M42.9,15.2l-13.3,4.3c0.3,0.8,0.4,1.6,0.4,2.5c0,2.7-1.3,5-3.3,6.5l8.2,11.3c5.5-4,9.1-10.5,9.1-17.8C44,19.6,43.6,17.3,42.9,15.2z"/></svg></div>'),
        (c +=
            '<div class="svg q3"><svg x="0px" y="0px" width="44px" height="44px" viewBox="0 0 44 44"><path d="M26.7,28.5c-1.3,1-2.9,1.5-4.7,1.5s-3.4-0.6-4.7-1.5L9.1,39.8C12.7,42.4,17.2,44,22,44s9.3-1.6,12.9-4.2L26.7,28.5z"/></svg></div>'),
        (c +=
            '<div class="svg q4"><svg x="0px" y="0px" width="44px" height="44px" viewBox="0 0 44 44"><path d="M14,22c0-0.9,0.1-1.7,0.4-2.5L1.1,15.2C0.4,17.3,0,19.6,0,22c0,7.3,3.6,13.8,9.1,17.8l8.2-11.3C15.3,27,14,24.7,14,22z"/></svg></div>'),
        (c += '<div class="svg q5"><svg x="0px" y="0px" width="44px" height="44px" viewBox="0 0 44 44"><path d="M22,14V0C12.2,0,3.9,6.4,1.1,15.2l13.3,4.3C15.4,16.3,18.4,14,22,14z"/></svg></div>'),
        (c += '</div><canvas id="canvas-bt-bonus-' + b + '" width="120" height="120"></canvas><div class="eye"></div><div class="hitzone"></div></div>'),
        $("#box-bt-bonus").append(c);
}
function showHome() {
    $fadeAll.removeClass(), $homeTitre.addClass("animate"), $homeVersion.addClass("animate");
    var a = appLoaded ? showBtHome : showHomeLoadbar;
    setTimeout(a, 1e3);
}
function tryToLoadMix() {
    xhr("POST", "http://www.incredibox.com/php/ios-get-mix-db.php", { link: mixlink }, function (a) {
        mixToWatch = "success" === a.state ? jsonDecode(a.mix) : null;
        var b = "Sorry, mix not found.";
        if (isnull(mixToWatch))
            $homeBtListen.find(".txt").html("Create a mix"),
                $homeBtListen.click(function () {
                    openURLFromIframe("http://www.incredibox.com");
                });
        else {
            var c = mixToWatch.model.toLowerCase();
            (c = c.indexOf("ipad") > -1 ? "iPad" : c),
                (c = c.indexOf("iphone") > -1 ? "iPhone" : c),
                (c = c.indexOf("ipod") > -1 ? "iPod Touch" : c),
                (b = $("#home #home-present").html()),
                (b = b.split("/NAME/").join(mixToWatch.name)),
                (b = b.split("/TITLE/").join(mixToWatch.title)),
                (b = b.split("/DEVICE/").join(c)),
                (b = b.split("/VERSION/").join(mixToWatch.apptitle));
        }
        $fadeAll.removeClass(), $homeTitre.addClass("animate"), $("#home #home-present").html(b), $("#home #home-present").addClass("animate"), isnull(mixToWatch) ? $homeBtListen.addClass("animate") : setTimeout(showHomeLoadbar, 1e3);
    });
}
function showHomeLoadbar() {
    $homeLoadbox.addClass("animate"), preparerArray();
}
function hideHomeLoadbar() {
    $homeLoadbox.removeClass("animate");
    var a = isMixReplay ? showBtListen : showBtHome;
    a();
}
function showBtListen() {
    $homeBtListen.addClass("animate"),
        $homeBtListen.bind(evtClick, function () {
            var a = new SoundObject(contextAudio);
            a.prepare(tabBuffer[0][0], 0), a.play(0);
            var b = $("#box-video .video#video1 .overflow video")[0];
            b.play(),
                setTimeout(function () {
                    a.stop(), b.pause(), (b.currentTime = 0);
                }, 500),
                clickBtWatch(mixToWatch);
        }),
        $boxBt2.hide(),
        $btCreate.show(),
        $btCreate.click(function () {
            openURLFromIframe(isIOS ? appIOS.url : "http://www.incredibox.com");
        });
}
function showBtHome() {
    appViewed ||
        ($homeBtPlay.bind(evtClick, clickHomeBtPlay),
        $homeBtPlay.addClass("animate"),
        $homeBtList.bind(evtClick, clickHomeBtList),
        $homeBtList.addClass("animate"),
        $homeBtSwitch.bind(evtClick, clickHomeBtSwitch),
        $homeBtSwitch.addClass("animate"),
        $homeBtInfo.bind(evtClick, clickHomeBtInfo),
        $homeBtInfo.addClass("animate"),
        enableBtGame(),
        (appViewed = !0),
        debugGame && $homeBtPlay.trigger(evtClick));
}
function clickHomeBtSwitch() {
    $boxSwitch.open();
}
function clickHomeBtInfo() {
    $boxPoptab.open();
}
function clickHomeBtPlay() {
    $fadeAll.addClass("animateIn").one(animationEnd, hideHome);
}
function hideHome() {
    (isBackToHome = !1),
        (onGame = !0),
        $home.hide(),
        renderRAF.start(),
        modeWatch ? (gotoModeWatch(), poloAllVisible || afficherAllPolo(!0)) : baisserAllPolo(),
        $fadeAll.removeClass("show").addClass("animateOut").one(animationEnd, lancerApp);
}
function backToHome() {
    (isBackToHome = !0), pictoForceOnDrop(), $fadeAll.addClass("animateIn").one(animationEnd, hideGame);
}
function hideGame() {
    (onGame = !1), stopAllStage(), renderRAF.stop(), closeTool(!1), $home.show(), $fadeAll.addClass("animateOut").one(animationEnd, showHome), modeWatch && backtoModeWatch();
}
function lancerApp() {
    $fadeAll.removeClass(), modeWatch ? startReplayMode() : afficherAllPolo();
}
function createGame() {
    (appLoaded = !0),
        (app.recminloop = showlog ? 1 : app.recminloop),
        (loopDuration = app.looptime),
        (nbLoopBonus = app.nbloopbonus),
        (nbPoloMax = app.nbpolo),
        (stepAnimation = frameHalf / loopDuration),
        (stepPercent = 100 / loopDuration),
        (sndAspire = new SoundObject(contextAudio)),
        (clock = new ClockObject("cnv-clock")),
        clock.init(76, 76, 1, 68, 16, "#5A5A5A"),
        (renderRAF = new RenderRAF(-1, renderLoop)),
        isMixReplay ? ((recordMix = function () {}), (recordMix.xmlAction = function () {}), (randomMix = function () {})) : ((randomMix = new RandomMix()), (recordMix = new RecordMix())),
        (replayMix = new ReplayMix()),
        (readingBar = new ReadingBar("#reading-bar", app.recminloop, app.recmaxloop)),
        (listPolo = creerBoxPolo()),
        majListPoloDrop(),
        (listPicto = creerBoxPicto()),
        (listBonus = creerBoxBonus());
}
function creerBoxPicto() {
    var a = [],
        b = isMobile ? 0 : 56;
    b = isiPhone4s ? 45 : b;
    for (var c = 68, d = Math.ceil((1024 - 10 * c - 2 * b - Math.ceil(c / 1.5)) / 9), e = b, f = 47, g = 0; g < nbSound; g++) {
        $("#box-picto").append('<div class="picto" id="picto' + g + '"><div class="scale"><div class="hitzone"></div></div></div>'),
            $("#box-picto #picto" + g + " .scale").css({ "background-image": "url(" + checkFileName(spritePicto.src) + ")" });
        var h = new PictoObject(g, $("#box-picto"));
        h.init(e, f), h.activer(), a.push(h), (e += c + d), 9 == g && ((e = 1024 - (e + c) + c + d), (f = 136));
    }
    return a;
}
function creerBoxPolo() {
    var a = [],
        b = isMobile ? 0 : 15;
    b = isiPhone4s ? 22 : b;
    for (var c = 164, d = 0; d < nbPoloMax; d++) {
        $("#box-polo").append('<div class="polo" id="polo' + d + '"></div>');
        var e = new PoloObject(d, $("#box-stage"), contextAudio, contextCanvas, Math.round(b + ((1024 - 2 * b - c) / (nbPoloMax - 1)) * d), 80);
        a.push(e);
    }
    return a;
}
function creerBoxBonus() {
    for (var a = [], b = 0, c = nbBonus - 1; b < nbBonus; b++, c--) {
        for (var d = app.bonusarray[b], e = d.code.split(","), f = $("#bt-bonus-" + (b + 1)).css({ right: 36 + 76 * c + "px" }), g = 0, h = e.length; g < h; g++) {
            var i = app.animearray[e[g] - 1].color;
            $(".svg.q" + (g + 1) + " svg", f).css({ fill: "#" + i });
        }
        var j = new BonusObject(b, d, contextAudio, tabBuffer[nbSound + b][0]);
        a.push(j);
    }
    return a;
}
function clickStage(a) {
    a.preventDefault(), clickTool();
}
function enableBtGame() {
    $btBack.bind(evtClick, function () {
        isToolbarMove || clickTool();
    }),
        $btTool.bind(evtClick, function () {
            isToolbarMove || clickTool();
        }),
        $btStop.bind(evtClick, function () {
            !isToolbarMove && loopOn && stopAllStage();
        }),
        $btRandom.bind(evtClick, function () {
            isToolbarMove || startRandomMode();
        }),
        $btRecord.bind(evtClick, function () {
            isToolbarMove || startRecordMode();
        }),
        $btHome.bind(evtClick, function () {
            isToolbarMove || backToHome();
        });
}
function enableBtTool() {
    $btTool.bind(evtClick, function () {
        isToolbarMove || clickTool();
    });
}
function clickTool() {
    var a = isToolbarOpen ? closeTool : openTool;
    (isToolbarMove = !0), a();
}
function openTool() {
    $boxBt.removeClass("close").addClass("open").one(animationEnd, endToolMove), $gameTouch.bind(evtPress, clickStage), (isToolbarOpen = !0);
}
function closeTool() {
    $gameTouch.unbind(), $boxBt.removeClass("open").addClass("close").one(animationEnd, endToolMove), (isToolbarOpen = !1);
}
function endToolMove() {
    isToolbarMove = !1;
}
function baisserAllPolo() {
    poloAllVisible = !1;
    for (var a = 0; a < nbPoloMax; a++) {
        var b = listPolo[a];
        b.baisser();
    }
}
function afficherAllPolo(a) {
    poloAllVisible = !0;
    for (var b = 0; b < nbPoloMax; b++) {
        var c = listPolo[b];
        c.remonte(0.03 * b, !1, a);
    }
}
function habillerPolo(a, b, c) {
    c = isnull(c) ? 0 : c;
    var d = a,
        e = b,
        f = e.getId(),
        g = tabAnime[f];
    d.habiller(e, cntBoucle, g, c), loopOn ? (d.showLoader(), d.activerClick()) : waitingFirstLoop || (modeReplay || modeWatch ? setTimeout(afterWaiting, 0) : setTimeout(afterWaiting, delayassist), (waitingFirstLoop = !0));
}
function afterWaiting() {
    enableBtClock(), enableClickFirstPolos(), startLoop(), (waitingFirstLoop = !1), waitForRecording && startRecording();
}
function enableClickFirstPolos() {
    for (var a = 0; a < nbPoloMax; a++) {
        var b = listPolo[a];
        b.getBusy() && b.activerClick();
    }
}
function clickPolo(a) {
    var b = a;
    b.desactiverClick(), getRemainingTime() < delayassist ? listPoloToRemove.push(b) : removePolo(b);
    var c = getListPoloBusy().length;
    (0 !== c && c != listPoloToRemove.length) || stopLoop();
}
function mutePolo(a) {
    a.mute();
}
function unmutePolo(a) {
    a.unmute();
}
function soloPolo() {
    for (var a = getListPoloBusy(), b = a.length, c = 0; c < b; c++) {
        var d = a[c];
        d.getSolo() ? d.unmute() : d.mute();
    }
}
function checkPoloToSolo() {
    for (var a = 0, b = listPoloToSolo.length; a < b; a++) {
        var c = listPoloToSolo[a];
        c.unmute();
    }
    listPoloToSolo = [];
}
function getTotalSolo() {
    for (var a = getListPoloBusy(), b = a.length, c = 0, d = 0; d < b; d++) {
        var e = a[d];
        e.getSolo() && c++;
    }
    return c;
}
function stopSoloPolo() {
    for (var a = getListPoloBusy(), b = a.length, c = 0; c < b; c++) {
        var d = a[c];
        listPoloToSolo.push(d);
    }
    getRemainingTime() > delayassist && checkPoloToSolo();
}
function removePolo(a, b) {
    checkerCodeBonus(a.getPicto(), !1), 1 == getTotalSolo() && a.getSolo() && ((a.setSolo = !1), stopSoloPolo()), a.deshabiller(b, bonusPlaying), a.desactiverClick();
    var c = modeWatch || isBackToHome;
    a.stopSound(c);
}
function checkPoloToRemove() {
    for (var a = listPoloToRemove.length, b = bonusPlaying ? 0.01 : 0.03, c = 0; c < a; c++) removePolo(listPoloToRemove[c], c * b);
    listPoloToRemove = [];
}
function pictoOnDrag(a) {
    tabPictoOnDrag.push(a.getId()), poloWatchPicto(a);
    for (var b = 0, c = listPoloDrop.length; b < c; b++) "hover" != listPoloDrop[b].getMode() && listPoloDrop[b].mode("regarde");
}
function pictoOnMove(a) {
    poloWatchPicto(a), checkPictoHoverPolo(a);
}
function poloWatchPicto(a) {
    a.getId() === tabPictoOnDrag[0] && ((mouseX = a.getBound().px), (mouseY = a.getBound().py));
}
function checkPictoHoverPolo(a) {
    for (var b = 0, c = listPoloDrop.length; b < c; b++) {
        var d = listPoloDrop[b];
        d.hitTestPicto(a) ? (d.rollover(), (d.pictoHoverId = a.getId())) : d.pictoHoverId == a.getId() && (d.rollout(), (d.pictoHoverId = null));
    }
}
function poloStopHover() {
    for (var a = 0, b = listPoloDrop.length; a < b; a++) listPoloDrop[a].rollout(!0);
}
function poloForceDraw() {
    for (var a = 0; a < nbPoloMax; a++) {
        var b = listPolo[a];
        b.draw();
    }
}
function pictoOnDrop(a, b) {
    var c = listPoloDrop.length,
        d = !1;
    if (b && void 0 !== b) {
        var e = a.getDiv();
        e.removeClass("drag");
    } else
        for (var f = 0; f < c; f++)
            if (!d) {
                var g = listPoloDrop[f];
                g.hitTestPicto(a) && ((d = !0), pictoTouchePolo(g, a));
            }
    if ((d ? (majListPoloDrop(), (c = listPoloDrop.length)) : a.replacer(), majListPictoOnDrag(a.getId()), 0 === tabPictoOnDrag.length)) for (var h = 0; h < c; h++) listPoloDrop[h].mode("normal");
}
function pictoForceOnDrop(a) {
    if (void 0 !== tabPictoOnDrag) {
        var b = void 0 !== a && a;
        if (tabPictoOnDrag.length > 0) {
            for (var c = 0, d = tabPictoOnDrag.length; c < d; c++) b ? listPicto[tabPictoOnDrag[c]].forceReplacer() : pictoOnDrop(listPicto[tabPictoOnDrag[0]], !0);
            poloStopHover(), (tabPictoOnDrag = []);
        }
    }
}
function majListPictoOnDrag(a) {
    var b = tabPictoOnDrag.indexOf(a);
    b > -1 && tabPictoOnDrag.splice(b, 1);
}
function pictoTouchePolo(a, b, c) {
    b.absorber(a), checkerCodeBonus(b, !0), habillerPolo(a, b, c), getTotalSolo() > 0 && a.mute();
}
function majListPoloDrop() {
    listPoloDrop = [];
    for (var a = 0; a < nbPoloMax; a++) {
        var b = listPolo[a];
        b.getBusy() || listPoloDrop.push(b);
    }
}
function clickBtClock() {
    getTime() - btClockClickedAt > 350 && (pauseGame(), (btClockClickedAt = getTime()));
}
function enableBtClock() {
    $btClock.bind(evtClick, clickBtClock).addClass("enable");
}
function disableBtClock() {
    $btClock.unbind(evtClick, clickBtClock).removeClass("enable");
}
function clickBtBonus(a) {
    (bonusWaiting = !0), (bonusQueue = a), (curVideo = listBonus[bonusQueue - 1]), checkSndAspire(!0);
    var b = getRemainingTime(bonusWaiting ? !boucleA : !1),
        c = decimal(Number((b / 1e3).toFixed(1)), 2) - 0.5;
    TweenMax.delayedCall(c, showBlackLayerAtStart);
}
function cancelClickBtBonus() {
    bonusWaiting && (sndAspire.mute(), stopBonusVideo(!1));
}
function showBlackLayerAtStart() {
    $fadeVideo.addClass("fadeIn"), modeReplay || modeRandom || $lockPicto.addClass("animateFadeIn");
}
function waitForSlideUp() {
    var a = getRemainingTime(!1),
        b = Number((a / 1e3).toFixed(1)) - 0.3;
    TweenMax.delayedCall(b, videoSlideUp);
}
function launchBonusVideo() {
    $fadeVideo.removeClass("fadeIn"), pictoForceOnDrop(!0), videoSlideDown(), curVideo.play(), (bonusWaiting = !1), (bonusPlaying = !0);
}
function stopBonusVideo(a) {
    TweenMax.killTweensOf(showBlackLayerAtStart),
        TweenMax.killTweensOf(videoSlideUp),
        bonusWaiting
            ? reinitBonusVideo()
            : bonusPlaying &&
              (a
                  ? ($fadeVideo.addClass("fadeIn").one(animationEnd, function (a) {
                        reinitBonusVideo();
                    }),
                    videoSlideUp())
                  : reinitBonusVideo());
}
function reinitBonusVideo() {
    $fadeVideo.removeClass("fadeIn"),
        bonusPlaying &&
            $fadeVideo.addClass("fadeOut").one(animationEnd, function (a) {
                $fadeVideo.removeClass("fadeIn fadeOut");
            }),
        modeReplay ||
            modeRandom ||
            $lockPicto.addClass("animateFadeOut").one(animationEnd, function (a) {
                $lockPicto.removeClass("animateFadeIn animateFadeOut");
            }),
        curVideo.stop(),
        reinitBonusVars();
}
function reinitBonusVars() {
    (bonusWaiting = !1), (bonusPlaying = !1), (bonusQueue = 0), (cntBoucleBonus = 0), (curVideo = null);
}
function checkerCodeBonus(a, b) {
    for (var c = a.getId() + 1, d = 0; d < nbBonus; d++) {
        var e = listBonus[d];
        e.checkCode(c, b);
    }
}
function videoSlideDown() {
    $boxBottom.addClass("bottomSlide"), (modeRandom || modeWatch) && $watchInfo.removeClass("fadeUp");
}
function videoSlideUp() {
    $boxBottom.removeClass("bottomSlide"), (modeRandom || modeWatch) && $watchInfo.addClass("fadeUp");
}
function loopFinished() {
    checkPoloToRemove(), checkPoloToSolo(), modeRandom && randomMix.loop(), modeReplay && readingBar.loop(), loopOn && startLoop(), modeRecord && readingBar.loop();
}
function startLoop() {
    (startboucle = getTime()),
        (loopOn = !0),
        (frame = 0),
        boucleA ? ((framePart2 = 0), (currentSndPart = 0)) : ((framePart2 = frameHalf), (currentSndPart = 1)),
        clock.start(loopDuration, boucleA),
        clock.checkAtEnd(),
        sndAspire.prepare(tabBuffer[nbSound + nbBonus][0], 0),
        modeReplay && readingBar.isLastLoop() ? sndAspire.loop(readingBar.loop) : sndAspire.loop(loopFinished),
        checkSndAspire(!1),
        (bonusWaiting || bonusPlaying) && playBonus(),
        bonusPlaying ? checkPoloLoader() : playSounds(),
        sndAspire.play(0, loopDuration / 1e3),
        cntBoucle++,
        (boucleA = !boucleA);
}
function checkSndAspire(a) {
    bonusWaiting && boucleA == a && sndAspire.unmute();
}
function stopLoop() {
    (loopOn = !1), (boucleA = !0), (cntBoucle = 0), (currentSndPart = 0), clock.stop(), sndAspire.stop(), stopBonusVideo(!0), checkPoloToRemove(), disableBtClock(), modeRecord && stopRecordMode(), modeReplay && stopReplayMode();
}
function playBonus() {
    boucleA && !bonusPlaying && (launchBonusVideo(), checkPoloLoader()), bonusPlaying && (cntBoucleBonus++, cntBoucleBonus == nbLoopBonus && waitForSlideUp(), cntBoucleBonus > nbLoopBonus && stopBonusVideo());
}
function playSounds() {
    for (var a = 0; a < nbPoloMax; a++) {
        var b = listPolo[a];
        b.getBusy() && (b.waitOneLoop ? (b.showLoader(), (b.waitOneLoop = !1)) : playSoundPolo(b));
    }
}
function playSoundPolo(a) {
    var b = a;
    b.sound.prepare(tabBuffer[b.getAssetId()][currentSndPart]), (b.getMoment() != cntBoucle && void 0 === b.waitOneLoop) || b.hideLoader(), b.getMute() || b.mode("anime"), b.playSound();
}
function pauseAudioSource() {
    if (!bonusPlaying)
        for (var a = 0; a < nbPoloMax; a++) {
            var b = listPolo[a];
            b.getPlaying() && b.sound.pause();
        }
    sndAspire.pause();
}
function unpauseAudioSource() {
    if (!bonusPlaying)
        for (var a = 0; a < nbPoloMax; a++) {
            var b = listPolo[a];
            b.getPlaying() && b.sound.unpause();
        }
    sndAspire.unpause(!0);
}
function renderLoop() {
    if (
        ((timenow = getTime()),
        (timespent = getTimeSpent()),
        (timeremain = getTimeRemain()),
        (pctMetronome = timespent * stepPercent),
        (frame = Math.floor(timespent * stepAnimation)),
        clock.render(),
        readingBar.render(),
        isnull(curVideo) || curVideo.render(),
        !bonusPlaying)
    ) {
        contextCanvas.clearRect(0, 0, 1024, 400);
        for (var a = 0; a < nbPoloMax; a++) listPolo[a].draw();
    }
}
function stopAllStage() {
    for (var a = getListPoloBusy(), b = 0, c = a.length; b < c; b++) {
        var d = a[b];
        listPoloToRemove.push(d);
    }
    stopLoop();
}
function pauseGame() {
    if (pause) {
        pause = !1;
        var a = getTime() - pausedAt;
        (startboucle += a), $lockPause.hide(), $btTool.removeClass("pause"), clock.resume(), TweenMax.resumeAll(), renderRAF.start(), unpauseAudioSource(), isnull(curVideo) || curVideo.resume();
    } else
        (pause = !0), (pausedAt = getTime()), $lockPause.show(), $btTool.addClass("pause"), clock.pause(), renderRAF.stop(), TweenMax.pauseAll(), pictoForceOnDrop(), poloForceDraw(), pauseAudioSource(), isnull(curVideo) || curVideo.pause();
}
function onPause() {
    lock(), renderRAF.stop(), TweenMax.killTweensOf(onResumeDelayed), onGame && (TweenMax.pauseAll(), loopOn && !pause && ((pausedAt = getTime()), clock.pause(), pauseAudioSource(), isnull(curVideo) || curVideo.pause()));
}
function onResume() {
    renderRAF.stop(),
        sndTest.checkSoundCanPlay(null, function () {
            TweenMax.delayedCall(1, onResumeDelayed);
        });
}
function onResumeDelayed() {
    onGame && (pictoForceOnDrop(), poloForceDraw(), loopOn && !pause && ((startboucle += getTime() - pausedAt), clock.resume(), unpauseAudioSource(), isnull(curVideo) || curVideo.resume(), TweenMax.resumeAll()), pause || renderRAF.start()),
        unlock();
}
function checkPoloLoader() {
    for (var a = 0; a < nbPoloMax; a++) {
        var b = listPolo[a].getMode();
        ("waiting" != b && "mute" != b) || listPolo[a].hideLoader();
    }
}
function poloShowPointer(a) {
    for (var b = getListPoloBusy(), c = listBonus[a - 1], d = 0, e = b.length; d < e; d++) {
        var f = b[d].getPicto().getId();
        c.hasCode(f + 1) && b[d].showYou();
    }
}
function pausePolos() {
    for (var a = 0; a < nbPoloMax; a++) listPolo[a].pause();
}
function resumePolos() {
    for (var a = 0; a < nbPoloMax; a++) listPolo[a].resume();
}
function getStringDate(a, b) {
    a = a.indexOf("/") == -1 ? a.split("-").join("/") : a;
    var c = new Date(a);
    if (b) {
        var d = c.getHours(),
            e = c.getMinutes(),
            f = c.getSeconds();
        return (d = d < 10 ? (d = String("0" + d)) : String(d)), (e = e < 10 ? (e = String("0" + e)) : String(e)), (f = f < 10 ? (f = String("0" + f)) : String(f)), String(d + ":" + e + ":" + f);
    }
    var g = c.getDate(),
        h = c.getMonth(),
        i = c.getFullYear(),
        j = [STR("txt.m1"), STR("txt.m2"), STR("txt.m3"), STR("txt.m4"), STR("txt.m5"), STR("txt.m6"), STR("txt.m7"), STR("txt.m8"), STR("txt.m9"), STR("txt.m10"), STR("txt.m11"), STR("txt.m12")];
    return g + " " + j[h] + " " + i;
}
function getTimeSpent(a) {
    return loopOn || a ? timenow - startboucle : 0;
}
function getTimeRemain() {
    return loopDuration - getTimeSpent();
}
function getRemainingTime(a) {
    return (a = void 0 !== a && a), a ? 2 * loopDuration - (getTime() - startboucle) : loopDuration - (getTime() - startboucle);
}
function getRandomObject(a) {
    var b = Math.floor(Math.random() * a.length),
        c = a.splice(b, 1)[0];
    return c;
}
function isStageFull() {
    return getListPoloBusy().length == nbPoloMax;
}
function isAllPoloWaiting() {
    return 0 === getListPoloBusy().length;
}
function getListPoloBusy() {
    for (var a = [], b = 0; b < nbPoloMax; b++) {
        var c = listPolo[b];
        c.getBusy() && a.push(c);
    }
    return a;
}
function getListPoloFree() {
    for (var a = [], b = 0; b < nbPoloMax; b++) {
        var c = listPolo[b];
        c.getBusy() || a.push(c);
    }
    return a;
}
function getListPictoBusy() {
    for (var a = [], b = 0; b < nbSound; b++) {
        var c = listPicto[b];
        c.use && a.push(c);
    }
    return a;
}
function getListPictoFree() {
    for (var a = [], b = 0; b < nbSound; b++) {
        var c = listPicto[b];
        c.use || a.push(c);
    }
    return a;
}
function lock() {
    $lockAll.addClass("show"), pictoForceOnDrop();
}
function unlock() {
    $lockAll.removeClass("show");
}
function initMixlist() {
    ($poplist = $mixlist.$pop), ($mixlist.$bck.fadeIn = fadeInBck), ($mixlist.$bck.fadeOut = fadeOutBck);
}
function fadeInBck(a) {
    a ? this.addClass("mini") : this.removeClass("mini"), this.addClass("animateFadeIn");
}
function fadeOutBck() {
    this.addClass("animateFadeOut").one(animationEnd, function (a) {
        $(a.target).removeClass("animateFadeIn animateFadeOut");
    });
}
function clickHomeBtList() {
    openPoplist();
}
function openPoplist() {
    lock(), openTabLatest(), $mixlist.addClass("show"), $mixlist.$bck.fadeIn(), $poplist.addClass("open").one(animationEnd, enableMixlist);
}
function enableMixlist() {
    unlock(), $poplist.addClass("opened"), $poplist.removeClass("open"), $mixlist.$bck.bind(evtClick, closePoplist);
}
function closePoplist(a) {
    var b = isTouchDevice ? a.originalEvent.targetTouches[0] : a,
        c = Math.round(b.pageY);
    $("#debugrepere").css({ top: c + "px" }), c > 100 * stageScale && ($mixlist.$bck.unbind(), lock(), (isMixLocal = !1), $mixlist.$bck.fadeOut(), $poplist.removeClass("opened"), $poplist.addClass("close").one(animationEnd, hideMixlist));
}
function hideMixlist() {
    closeLine($lineOpened), unactiveFilter(), $poplist.removeClass("open close"), $mixlist.removeClass("show"), $("#tab-latest", $poplist).removeClass("active"), blurAll(), unlock();
}
function clickBtMore(a) {
    var b = $(a),
        c = null !== $lineOpened ? $lineOpened.index() : -1;
    toggleLine($lineOpened), c != b.index() && toggleLine(b);
}
function toggleLine(a) {
    null !== a &&
        (a.hasClass("animateOpen")
            ? (a
                  .removeClass("animateOpen")
                  .addClass("animateClose")
                  .one(animationEnd, function () {
                      a.removeClass("animateClose");
                  }),
              ($lineOpened = null))
            : (a.removeClass("animateClose").addClass("animateOpen"), ($lineOpened = a)));
}
function closeLine(a) {
    null !== a && (a.removeClass("animateOpen").removeClass("animateClose"), ($lineOpened = null));
}
function clickBtWatch(a) {
    var b = void 0 === a.type ? a : null;
    if (isnull(b)) {
        var c = $(this),
            d = c.parent().parent(),
            e = d.index(),
            f = d.attr("data-key");
        b = isMixLocal ? localMixObject.getMix(f) : getMixInTab(e);
    }
    isnull(b)
        ? $boxDialog.open(STR("pop.notFoundText"), STR("pop.notFoundTitle"), [STR("bt.ok")])
        : ((modeWatch = !0),
          (mixToWatch = b),
          $watchInfo.$title.html(b.title),
          $watchInfo.$name.html(STR("txt.createdBy") + " " + b.name),
          "" === b.dedi ? $watchInfo.$dedi.empty() : $watchInfo.$dedi.html(STR("txt.dedicatedTo") + " " + b.dedi),
          $watchInfo.$date.html(getStringDate(b.date)),
          $watchInfo.$date.attr("data-date", b.date),
          $watchInfo.$view.find(".txt").html(numberSpaced(b.nbview)),
          $watchInfo.$like.find(".txt").html(numberSpaced(b.nblike)),
          $lockBonus.$btLike.hide(),
          isMixLocal
              ? b.online
                  ? $watchInfo.find(".stat").removeClass("offline")
                  : $watchInfo.find(".stat").addClass("offline")
              : ($watchInfo.find(".stat").removeClass("offline"),
                $lockBonus.$btLike.removeClass("liked unliked already disabled"),
                $lockBonus.$btLike.unbind(),
                $lockBonus.$btLike.bind(evtClick, clickBtLikeMix),
                $lockBonus.$btLike.show(),
                b.liked && $lockBonus.$btLike.addClass("liked"),
                countView()),
          clickHomeBtPlay());
}
function clickBtShare(a) {
    var b = $(this),
        c = b.parent().parent(),
        d = c.index(),
        e = c.attr("data-key"),
        f = isMixLocal ? localMixObject.getMix(e) : getMixInTab(d);
    null !== f
        ? socialSharing("global", b, f, c)
        : $boxDialog.open(
              STR("pop.notFoundText"),
              STR("pop.notFoundTitle"),
              [STR("bt.ok")],
              [
                  function () {
                      removeSpinnerBt(b);
                  },
              ]
          );
}
function clickBtDelete(a) {
    var b = $(this).parent().parent(),
        c = b.attr("data-key");
    $boxDialog.open(
        STR("pop.deleteText"),
        STR("pop.deleteTitle"),
        [STR("bt.yes"), STR("bt.no")],
        [
            function () {
                deleteMixConfirm(b, c);
            },
            function () {
                unlock();
            },
        ]
    );
}
function deleteMixConfirm(a, b) {
    if (localMixObject.deleteMix(b)) {
        a.remove();
        var c = localMixObject.getAllMixByVersion().length;
        c <= 5 && $("#list-mymix", $poplist).scrollTop(0), 0 == c && $("#list-mymix .boxinfo", $poplist).html(STR("txt.mixlistEmpty")), unlock();
    } else
        $boxDialog.open(
            STR("pop.deleteBugText"),
            STR("pop.notFoundTitle"),
            [STR("bt.ok")],
            [
                function () {
                    unlock();
                },
            ]
        );
}
function closeAllTab() {
    $(".tab", $poplist).removeClass("active"), $(".tab-filter", $poplist).css({ display: "none" }), $(".scrollbox .scroll", $poplist).css({ display: "none" }), unactiveFilter();
}
function clickBtFilter() {
    var a = $(this).attr("id").split("-")[1];
    activeFilter(a);
}
function activeFilter(a) {
    lastFilter != a &&
        ("" !== lastFilter && unactiveFilter(),
        (lastFilter = a),
        $("#bt-" + lastFilter, $poplist).addClass("active"),
        $("#list-" + lastFilter, $poplist)
            .css({ display: "block" })
            .scrollTop(0));
}
function unactiveFilter() {
    closeLine($lineOpened),
        $("#bt-" + lastFilter, $poplist).removeClass("active"),
        $("#list-" + lastFilter, $poplist)
            .scrollTop(0)
            .css({ display: "none" }),
        (lastFilter = "");
}
function openTabMymix() {
    var a = $("#tab-mymix", $poplist);
    a.hasClass("active") || ($poplist.$spinner.hide(), (isMixLocal = !0), closeLine($lineOpened), closeAllTab(), getMymixList(), a.addClass("active"), $("#list-mymix", $poplist).css({ display: "block" }).scrollTop(0));
}
function getMymixList() {
    var a = 5;
    if (moreThanSecond(a, !1, "mymix")) $poplist.$spinner.show(), hasNetwork ? localMixObject.getStatMixOnline(fillPoplistMymix) : fillPoplistMymix();
    else if (hasNetwork) {
        var b = localMixObject.getAllMixByVersion().length;
        0 === b ? $("#list-mymix .boxinfo", $poplist).html(STR("txt.mixlistEmpty")) : $("#list-mymix .boxinfo", $poplist).html(STR("txt.mixlistInfo").split("<time>").join(a));
    } else $("#list-mymix .boxinfo", $poplist).html(STR("txt.mixlistNoCo"));
}
function fillPoplistMymix() {
    var a = localMixObject.getAllMixByVersion();
    if (((XHRmemotime.mymix = new Date()), a.length > 0)) {
        unbindLine("#list-mymix");
        var b = generateHtml("#list-mymix", a, generateLineMix);
        $("#list-mymix .boxline", $poplist).html(b[0]), $("#list-mymix .boxinfo", $poplist).html(STR("txt.mixlistInfo")), bindLine("#list-mymix");
    } else $("#list-mymix .boxinfo", $poplist).html(STR("txt.mixlistEmpty"));
    $poplist.$spinner.hide();
}
function openTabTop50() {
    var a = $("#tab-top50", $poplist);
    a.hasClass("active") || ($poplist.$spinner.hide(), (isMixLocal = !1), closeLine($lineOpened), closeAllTab(), loadOnlineList(), activeFilter("week"), a.addClass("active"), $(".tab-filter", $poplist).css({ display: "block" }));
}
function fillPoplistTop50() {
    clearPoplistTop50();
    var a = generateHtml("#list-week", onlineList.listWeek, generateLineTop50);
    $("#list-week .boxline", $poplist).html(a[0]),
        (listByWeek = a[1]),
        bindLine("#list-week"),
        $("#list-week .boxinfo", $poplist).html(STR("txt.top50Info")),
        (a = generateHtml("#list-month", onlineList.listMonth, generateLineTop50)),
        $("#list-month .boxline", $poplist).html(a[0]),
        (listByMonth = a[1]),
        bindLine("#list-month"),
        $("#list-month .boxinfo", $poplist).html(STR("txt.top50Info")),
        (a = generateHtml("#list-all", onlineList.listAll, generateLineTop50)),
        $("#list-all .boxline", $poplist).html(a[0]),
        (listByAll = a[1]),
        bindLine("#list-all"),
        $("#list-all .boxinfo", $poplist).html(STR("txt.top50Info")),
        $poplist.$spinner.hide();
}
function clearPoplistTop50() {
    unbindLine("#list-week"), (listByWeek = []), unbindLine("#list-month"), (listByMonth = []), unbindLine("#list-all"), (listByAll = []);
}
function openTabDj() {
    var a = $("#tab-dj", $poplist);
    a.hasClass("active") || ($poplist.$spinner.hide(), (isMixLocal = !1), closeLine($lineOpened), closeAllTab(), loadOnlineList(), a.addClass("active"), $("#list-dj", $poplist).css({ display: "block" }).scrollTop(0));
}
function fillPoplistDj() {
    var a = generateHtml("#list-dj", onlineList.listDj, generateLineDj);
    $("#list-dj .boxline", $poplist).html(a[0]), $("#list-dj .boxinfo", $poplist).html(STR("txt.mixlistBestDj")), $poplist.$spinner.hide();
}
function openTabLatest() {
    var a = $("#tab-latest", $poplist);
    a.hasClass("active") || ((isMixLocal = !1), closeLine($lineOpened), closeAllTab(), loadLatestMix(), a.addClass("active"), $("#list-latest", $poplist).css({ display: "block" }).scrollTop(0));
}
function reinitLatestList() {
    listLatest.length > 0 && ((listLatest = []), $("#list-latest .boxline", $poplist).empty(), delete XHRmemotime.latest);
}
function loadLatestMix() {
    hasNetwork
        ? moreThanSecond(1, !1, "latest")
            ? ($poplist.$spinner.show(),
              xhr(
                  "GET",
                  "http://www.incredibox.com/php/ios-get-mix-list.php?v=" + app.version + "&r=latest",
                  {},
                  function (a) {
                      if ("success" === a.state) {
                          XHRmemotime.latest = new Date();
                          var b = [],
                              c = a.list.length - 1;
                          for (var d in a.list) (b[c] = jsonDecode(a.list[d])), (b[c].dateQuery = a.now), (b[c].mymix = !1), c--;
                          (listLatest = b), unbindLine("#list-latest");
                          var e = generateHtml("#list-latest", b, generateLineMix, "latest");
                          $("#list-latest .boxline", $poplist).html(e[0]), $("#list-latest .boxinfo", $poplist).html(STR("txt.top50Info")), bindLine("#list-latest");
                      }
                      $poplist.$spinner.hide();
                  },
                  function () {
                      $poplist.$spinner.hide();
                  }
              ))
            : $poplist.$spinner.hide()
        : $boxDialog.open(STR("pop.noNetworkText"), STR("pop.noNetworkTitle"), [STR("bt.ok")]);
}
function generateHtml(a, b, c, d) {
    localMixObject.getAllMixByVersion();
    for (var e = "", f = [], g = 0, h = b.length; g < h; g++) {
        var i = b[g];
        f.push(i), (e += c(i, g, d));
    }
    return [e, f];
}
function generateLineMix(a, b, c) {
    var d = a || {},
        e = b + 1 || 0,
        f = c || "",
        g = "",
        h = "top50" === f,
        i = "top50" === f || "latest" === f,
        j = "latest" === f,
        k = !d.online && "" === f,
        l = "" === f,
        m = !("" == f || !isItMyMix(d)),
        n = !1;
    return (
        (g += "<div data-key='mix-" + d.link + "' class='line'>"),
        (g += "\t<div class='box-info" + (i ? " country" : "") + (h ? " rating" : "") + "'>"),
        (g += "\t\t<div class='num'>" + e + "</div>"),
        (g += i ? "\t<div class='flag'><div class='f16 code-" + d.country + "'></div></div>" : ""),
        (g += m ? "\t\t<div class='repere'></div>" : n ? "<div class='repere'></div><div class='star-txt'>N°" + d.intop50[1] + " - TOP 50 " + d.intop50[0] + "</div>" : ""),
        (g += "\t\t<span class='name'>" + d.name + "</span>"),
        (g += "\t\t<span class='title'>" + d.title + "</span>"),
        (g += "\t\t<span class='date' data-date='" + d.date + "'>" + (j ? getTimeAgo(d.datedb, d.dateQuery) : getStringDate(d.date)) + "</span>"),
        (g +=
            "\t\t<div class='stat" +
            (k ? " offline" : "") +
            "'><div class='boxstat liked'><div class='txt'>" +
            numberSpaced(d.nblike) +
            "</div><div class='bck'></div></div><div class='boxstat viewed'><div class='txt'>" +
            numberSpaced(d.nbview) +
            "</div><div class='bck'></div></div><div class='boxstat linked'><div class='txt'>" +
            STR("txt.offline") +
            "</div><div class='bck'></div></div></div>"),
        (g += "\t</div>"),
        (g += "\t<div class='box-action'>"),
        (g += "\t\t<div class='bt watch color'><div class='bck'><div class='bckimg'></div></div><div class='hitzone'></div></div>"),
        (g += "\t\t<div class='bt share color'><div class='bck'><div class='bckimg'></div></div><div class='hitzone'></div></div>"),
        (g += l ? "\t\t<div class='bt delete'><div class='bck'><div class='bckimg'></div></div><div class='hitzone'></div></div>" : ""),
        (g += "\t</div>"),
        (g += "</div>")
    );
}
function generateLineTop50(a, b) {
    return generateLineMix(a, b, "top50");
}
function generateLineDj(a, b) {
    var c = void 0 === b ? 0 : b + 1,
        d = "";
    return (
        (a.gcname = "" == a.gcname ? a.name : a.gcname),
        (d += "<div class='line'>"),
        (d += "\t<div class='box-info rating country'>"),
        (d += "\t\t<div class='num'>" + c + "</div>"),
        (d += "\t\t<div class='flag'><div class='f16 code-" + a.countryCode + "'></div></div>"),
        (d += "\t\t<span class='name'>" + a.countryName + "</span>"),
        (d += "\t\t<span class='title'>" + a.gcname + "</span>"),
        (d +=
            "\t\t<div class='stat'><div class='boxstat liked'><div class='txt'>" +
            numberSpaced(a.nblike) +
            "</div><div class='bck'></div></div><div class='boxstat viewed'><div class='txt'>" +
            numberSpaced(a.nbview) +
            "</div><div class='bck'></div></div><div class='boxstat mixed'><div class='txt'>" +
            a.nbmix +
            "</div><div class='bck'></div></div></div>"),
        (d += "\t</div>"),
        (d += "</div>")
    );
}
function isItMyMix(a) {
    for (var b in localMixObject.mixlist) {
        var c = localMixObject.mixlist[b];
        if (parseInt(c.id) == parseInt(a.id)) return !0;
    }
    return !1;
}
function bindLine(a) {
    var b = $poplist.find(a);
    $(".line", b).bind(evtPress, clickLineStart),
        $(".line", b).bind(evtPressEnd, clickLineEnd),
        $(".box-action", b).bind(evtPressEnd, function (a) {
            a.stopPropagation();
        }),
        $(".bt.watch", b).bind(evtClick, clickBtWatch),
        $(".bt.share", b).bind(evtClick, clickBtShare),
        $(".bt.delete", b).bind(evtClick, clickBtDelete);
}
function unbindLine(a) {
    var b = $poplist.find(a);
    $(".line", b).unbind(), $(".box-action", b).unbind(), $(".bt.watch", b).unbind(), $(".bt.share", b).unbind(), $(".bt.delete", b).unbind(), $(".boxline", b).empty();
}
function clickLineStart(a) {
    var b = $(a.currentTarget).parent().parent();
    scrollPosY = b.scrollTop();
}
function clickLineEnd(a) {
    var b = $(a.currentTarget).parent().parent(),
        c = b.scrollTop();
    c == scrollPosY && clickBtMore(a.currentTarget);
}
function getMixInTab(a) {
    var b = $("#mixlist #poplist .tab.active").attr("id").split("tab-").join(""),
        c = null;
    if ("latest" == b) c = listLatest[a];
    else if ("top50" == b)
        switch (lastFilter) {
            case "week":
                c = listByWeek[a];
                break;
            case "month":
                c = listByMonth[a];
                break;
            case "all":
                c = listByAll[a];
        }
    return c;
}
function moreThanSecond(a, b, c) {
    if (isnull(XHRmemotime[c])) return !b || a;
    var d = 60 * a,
        e = new Date(),
        f = XHRmemotime[c],
        g = f.getTime() - e.getTime(),
        h = Math.round(Math.abs(g / 1e3));
    return b === !0 ? secToText(1e3 * (d - h)) : h >= d;
}
function changeLineInfo(a) {
    a.find(".stat").removeClass("offline");
}
function clickBtLikeMix(a) {
    function b() {
        $lockBonus.$btLike.addClass("liked"),
            TweenMax.delayedCall(2, function () {
                $lockBonus.$btLike.removeClass("disabled");
            });
    }
    function c() {
        $lockBonus.$btLike.addClass("unliked").one(transitionEnd, function () {
            $lockBonus.$btLike.removeClass("liked unliked");
        }),
            TweenMax.delayedCall(2, function () {
                $lockBonus.$btLike.removeClass("disabled");
            });
    }
    hasNetwork ? ($lockBonus.$btLike.addClass("disabled"), mixToWatch.liked === !0 ? (c(), countLike("nbunlike")) : (b(), countLike("nblike"))) : $boxDialog.open(STR("pop.noNetworkVotedText"), STR("pop.noNetworkTitle"), [STR("bt.ok")]);
}
function countLike(a) {
    var b = inApp ? device.uuid : "unknown";
    xhr(
        "POST",
        "http://www.incredibox.com/php/ios-save-stat-mix.php",
        { uuid: b, id: mixToWatch.id, link: mixToWatch.link, row: a },
        function (a) {
            if ("success" == a.state)
                switch (a.info) {
                    case "like ok":
                        (mixToWatch.liked = !0), mixToWatch.nblike++;
                        break;
                    case "unlike ok":
                        (mixToWatch.liked = !1), mixToWatch.nblike--, (mixToWatch.nblike = mixToWatch.nblike < 0 ? 0 : mixToWatch.nblike);
                        break;
                    case "already liked":
                        $boxDialog.open(STR("pop.alreadyVotedText"), STR("pop.alreadyVotedTitle"), [STR("bt.ok")]), $lockBonus.$btLike.addClass("liked"), (mixToWatch.liked = !0);
                        break;
                    case "never liked":
                }
            $watchInfo.$like.find(".txt").text(numberSpaced(mixToWatch.nblike)), $lineOpened.find(".stat .liked .txt").text(numberSpaced(mixToWatch.nblike));
        },
        function (a) {}
    );
}
function countView() {
    var a = inApp ? device.uuid : "unknown";
    hasNetwork &&
        xhr("POST", "http://www.incredibox.com/php/ios-save-stat-mix.php", { uuid: a, link: mixToWatch.link, row: "nbview" }, function (a) {
            "success" == a.state && (mixToWatch.viewed = !0);
        });
}
function loadOnlineList() {
    (onlineList.loaded !== !0 || moreThanSecond(10, !1, "top50")) &&
        (hasNetwork
            ? ($poplist.$spinner.show(),
              xhr("GET", "http://www.incredibox.com/php/ios-top-50-v" + app.version + ".php", {}, function (a) {
                  if ((TweenMax.killTweensOf(checkIfOnlineListLoaded), "success" == a.state)) {
                      (XHRmemotime.top50 = new Date()), (onlineList = a), (onlineList.loaded = !0);
                      var b = 0;
                      [STR("bt.week"), STR("bt.month"), STR("bt.all")];
                      for (var c in onlineList)
                          if (c.indexOf("list") > -1) {
                              var d = 0;
                              for (var e in onlineList[c]) (onlineList[c][e] = jsonDecode(onlineList[c][e])), (onlineList[c][e].mymix = !1), d++;
                              b++;
                          }
                      fillPoplistTop50(), fillPoplistDj();
                  }
              }),
              TweenMax.delayedCall(4, checkIfOnlineListLoaded))
            : $boxDialog.open(STR("pop.noNetworkText"), STR("pop.noNetworkTitle"), [STR("bt.ok")]));
}
function checkIfOnlineListLoaded() {
    countCheckLoaded++, onlineList.loaded !== !0 && countCheckLoaded < 6 ? (countCheckLoaded++, loadOnlineList()) : (countCheckLoaded = 0);
}
function startRandomMode() {
    (modeRandom = !0),
        lock(),
        closeTool(!1),
        $boxTop.addClass("random"),
        $boxBt2.removeClass().addClass("random").one(transitionEnd, lancerRandomMode),
        $btTool.unbind().bind(evtClick, stopRandomMode),
        $btTool.bounce(),
        $lockPicto.addClass("random animateFadeIn"),
        $lockBonus.addClass("random animateFadeIn"),
        $btClock.addClass("random").one(transitionEnd, showTextRandom),
        $lockStage.show();
}
function showTextRandom() {
    $watchInfo.addClass("random fadeUp"), $watchInfo.$title.html(STR("txt.randomTitle")), $watchInfo.$name.html(STR("txt.randomText"));
}
function lancerRandomMode() {
    randomMix.start(loopOn), unlock();
}
function stopRandomMode() {
    (modeRandom = !1),
        randomMix.stop(),
        $boxBt2.removeClass(),
        $btTool.unbind(),
        enableBtTool(),
        $btTool.$bckimg.removeClass("spin"),
        $btTool.bounce(),
        $boxTop.removeClass("random"),
        $lockPicto.removeClass("random"),
        $lockBonus.removeClass("random"),
        $watchInfo.removeClass("fadeUp"),
        $btClock.removeClass("random").one(transitionEnd, afterStopRandom),
        $lockBonus.addClass("animateFadeOut"),
        bonusPlaying || $lockPicto.addClass("animateFadeOut");
}
function afterStopRandom() {
    bonusPlaying || $lockPicto.removeClass("animateFadeIn animateFadeOut"), $lockBonus.removeClass("animateFadeIn animateFadeOut"), $watchInfo.removeClass("random"), $lockStage.hide();
}
function startRecordMode() {
    bonusPlaying
        ? TweenMax.delayedCall(0.25, popupBonusPlaying)
        : (lock(),
          closeTool(!1),
          (modeRecord = !0),
          (waitForRecording = !1),
          recordMix.init(),
          (readingBar.maxLoop = app.recmaxloop),
          readingBar.open("record"),
          $boxTop.addClass("record"),
          $boxBt2.removeClass().addClass("record"),
          loopOn ? lancerRecordMode() : $boxBt2.one(transitionEnd, lancerRecordMode),
          $btTool.unbind().bind(evtClick, stopRecordMode),
          $btTool.bounce());
}
function lancerRecordMode() {
    loopOn ? startRecording() : ((waitForRecording = !0), popupDrag()), unlock();
}
function startRecording() {
    (waitForRecording = !1), readingBar.start();
}
function stopRecordMode() {
    (modeRecord = !1),
        readingBar.stop(),
        readingBar.close(),
        $boxTop.removeClass("record"),
        $boxBt2.removeClass(),
        $btTool.unbind(),
        enableBtTool(),
        $btTool.bounce(),
        readingBar.cntLoop < readingBar.minLoop && !waitForRecording && TweenMax.delayedCall(0.25, popupShort),
        readingBar.cntLoop >= readingBar.minLoop && (lock(), pictoForceOnDrop(), stopAllStage(), popupRecok());
}
function startReplayMode() {
    modeWatch
        ? startWatchMode()
        : ((modeReplay = !0),
          lock(),
          closeTool(!1),
          $boxTop.addClass("replay"),
          $boxBt2.removeClass().addClass("replay").one(transitionEnd, lancerReplayMode),
          $btTool.unbind().bind(evtClick, stopReplayMode),
          $btTool.bounce(),
          $btSave.addClass("visible"),
          $btSave.bind(evtClick, function () {
              stopReplayMode(!0);
          }),
          $lockPicto.addClass("animateFadeIn").one(animationEnd, showTextReplay),
          $lockBonus.addClass("animateFadeIn"),
          $lockStage.show());
}
function showTextReplay() {
    $watchInfo.$title.html(STR("txt.replayTitle")), $watchInfo.$name.html(STR("txt.replayText")), $watchInfo.addClass("replay fadeUp");
}
function lancerReplayMode() {
    var a = modeWatch ? mixToWatch.mix : recordMix.getXML();
    (replayMix = new ReplayMix(a)), (readingBar.maxLoop = replayMix.getTotalLoop()), readingBar.open("play").start(), unlock();
}
function stopReplayMode(a) {
    modeWatch
        ? stopWatchMode()
        : ((modeReplay = !1),
          readingBar.stop().close(),
          stopAllStage(),
          $boxTop.removeClass("replay"),
          $boxBt2.removeClass(),
          $btTool.bounce(),
          $btSave.unbind(),
          $lockPicto.addClass("animateFadeOut").one(animationEnd, afterStopReplay),
          $lockBonus.addClass("animateFadeOut"),
          $watchInfo.removeClass("fadeUp"),
          $lockStage.hide(),
          popupRecok(a)),
        $btTool.unbind(),
        enableBtTool();
}
function afterStopReplay() {
    $lockPicto.removeClass("random animateFadeIn animateFadeOut"), $lockBonus.removeClass("random animateFadeIn animateFadeOut"), $watchInfo.removeClass("replay"), $btSave.removeClass("visible");
}
function gotoModeWatch() {
    $lockPicto.css({ visibility: "visible" }), $lockBonus.css({ visibility: "visible" }), $watchInfo.addClass("fadeUp"), $mixlist.css({ transform: "translateX(100%)" }), $boxTop.addClass("replay"), $boxBt2.removeClass().addClass("replay");
}
function backtoModeWatch() {
    (modeWatch = !1), $boxTop.removeClass("replay"), $boxBt2.removeClass(), $lockPicto.removeAttr("style"), $lockBonus.removeAttr("style"), $watchInfo.removeClass("fadeUp"), $mixlist.removeAttr("style"), $lockBonus.$btLike.hide();
}
function startWatchMode() {
    (modeReplay = !0), lock(), $btTool.unbind().bind(evtClick, stopReplayMode), $lockStage.show(), lancerReplayMode();
}
function stopWatchMode() {
    (modeReplay = !1), readingBar.stop().close(), isMixReplay ? (stopAllStage(), popupReplayOk()) : ($lockStage.hide(), backToHome());
}
function popupDrag() {
    $boxPopup.$pop.clean(), $boxPopup.$pop.$title.html(STR("pop.dragDropTitle")), $boxPopup.$pop.$text.html(STR("pop.dragDropText")), $boxPopup.$pop.reflow(), $boxPopup.open({ type: "info", bck: "mini" });
}
function popupShort() {
    $boxPopup.$pop.clean(),
        $boxPopup.$pop.$title.html(STR("pop.toShortTitle")),
        $boxPopup.$pop.$text.html(STR("pop.toShortText").split("<minimum-time>").join(app.recmintime)),
        $boxPopup.$pop.reflow(),
        $boxPopup.open({ type: "info", bck: "mini" });
}
function popupBonusPlaying() {
    $boxPopup.$pop.clean(), $boxPopup.$pop.$title.html(STR("pop.bonusPlayingTitle")), $boxPopup.$pop.$text.html(STR("pop.bonusPlayingText")), $boxPopup.$pop.reflow(), $boxPopup.open({ type: "info", bck: "" });
}
function popupRecok(a) {
    a === !0
        ? popupForm(!0)
        : ($boxPopup.$pop.clean(),
          $boxPopup.$pop.$title.html(STR("pop.recOkTitle")),
          $boxPopup.$pop.$content.append("<div class='bt bt-haut retry'><div class='bck'><div class='bckimg'></div></div><div class='txt'>" + STR("bt.retry") + "</div><div class='hitzone'></div></div>"),
          $boxPopup.$pop.$content.append("<div class='bt bt-haut replay'><div class='bck'><div class='bckimg'></div></div><div class='txt'>" + STR("bt.replay") + "</div><div class='hitzone'></div></div>"),
          $boxPopup.$pop.$content.append("<div class='bt bt-haut save'><div class='bck'><div class='bckimg'></div></div><div class='txt'>" + STR("bt.save") + "</div><div class='hitzone'></div></div>"),
          $boxPopup.$pop.$content.find(".bt.retry").bind(evtClick, clickRetryMix),
          $boxPopup.$pop.$content.find(".bt.replay").bind(evtClick, clickReplayMix),
          $boxPopup.$pop.$content.find(".bt.save").bind(evtClick, clickSaveMix),
          $boxPopup.$pop.reflow(),
          $boxPopup.open({ type: "action", bck: "", unlock: !0 }));
}
function clickRetryMix() {
    $boxPopup.close(), TweenMax.delayedCall(0.2, startRecordMode);
}
function clickReplayMix() {
    $boxPopup.close(), startReplayMode();
}
function clickSaveMix() {
    $boxPopup.$box.close(popupForm);
}
function popupForm(a) {
    var b = storage.getItem("user-djname") || "";
    $boxPopup.$pop.clean(), $boxPopup.$pop.$title.html(STR("pop.formTitle"));
    var c = "";
    (c += "<form action='javascript:clickBtValidFormMix()' method='post' target='_self'>"),
        (c += "\t<div class='formzone'>"),
        (c += "\t\t<div class='formline ic-name'><input type='text' id='input-name' placeholder='" + STR("txt.inputName") + "' value='" + b + "' maxlength='26' autocomplete='off' autocorrect='off' spellcheck='false'/></div>"),
        (c += "\t\t<div class='formline ic-title'><input type='text' id='input-title' placeholder='" + STR("txt.inputTitle") + "' value='' maxlength='26' autocomplete='off' autocorrect='off' spellcheck='false'/></div>"),
        (c += "\t\t<div class='formline ic-dedi'><input type='text' id='input-dedi' placeholder='" + STR("txt.dedicatedTo") + "...' value='' maxlength='26' autocomplete='off' autocorrect='off' spellcheck='false'/></div>"),
        (c += "\t</div>"),
        (c +=
            "\t<div class='btzone'><div class='bt valid'><div class='bck'><div class='bckimg'></div></div><div class='hitzone'></div></div></div><input type='submit' style='visibility:hidden;position:absolute'/><div class='clear'></div>"),
        (c += "</form>"),
        $boxPopup.$pop.$content.append(c),
        isIOS ? ($boxPopup.funcOnClose = deleteFormFocus) : isAndroid && ($boxPopup.funcOnClose = launchImmersiveMode),
        $boxPopup.$pop.$content.find("#input-name").focus(),
        $boxPopup.$pop.$content.find(".bt.valid").bind(evtClick, clickBtValidFormMix),
        $boxPopup.$pop.reflow();
    var d = a === !0 ? $boxPopup : $boxPopup.$box;
    d.open({ type: "action", bck: "", unlock: !0 });
}
function keyboardOpen(a) {
    TweenMax.set($boxPopup, { scrollTo: { y: 0 } }), $boxPopup.addClass("keyboardOpen");
    var b = $boxPopup.$pop.$content.find("#input-name"),
        c = a.keyboardHeight,
        d = screenH - c,
        e = d / 2,
        f = b.height() / 2;
    $boxPopup.$pop.$content.find(".formline input").each(function () {
        var a = $(this),
            b = Math.round(a.position().top - e + f) / stageScale;
        a.focus(function (a) {
            TweenMax.to($boxPopup, 0.4, { scrollTo: { y: b }, ease: Quint.easeInOut });
        });
    }),
        b.focus();
}
function keyboardClose() {
    TweenMax.to($boxPopup, 0.5, {
        scrollTo: { y: 0 },
        ease: Quint.easeInOut,
        onComplete: function () {
            $boxPopup.removeClass("keyboardOpen");
        },
    });
}
function launchImmersiveMode() {
    isAndroid &&
        !immersiveMode &&
        ((immersiveMode = !0),
        AndroidFullScreen.isSupported(function () {
            AndroidFullScreen.isImmersiveModeSupported(function () {
                AndroidFullScreen.immersiveMode(function () {}, errorImmersiveMode);
            }, errorImmersiveMode);
        }, errorImmersiveMode));
}
function errorImmersiveMode(a) {}
function deleteFormFocus() {
    $boxPopup.$pop.$content.find("#input-name").unbind(), $boxPopup.$pop.$content.find("#input-title").unbind(), $boxPopup.$pop.$content.find("#input-dedi").unbind(), blurAll();
}
function blurAll() {
    $(":focus").blur();
}
function popupReplayOk() {
    $boxPopup.$pop.clean(),
        $boxPopup.$pop.$title.html(STR("pop.recOkTitle")),
        $boxPopup.$pop.$content.append("<div class='bt bt-haut create'><div class='bck'><div class='bckimg'></div></div><div class='txt'>" + STR("bt.create") + "</div><div class='hitzone'></div></div>"),
        $boxPopup.$pop.$content.append("<div class='bt bt-haut replay'><div class='bck'><div class='bckimg'></div></div><div class='txt'>" + STR("bt.replay") + "</div><div class='hitzone'></div></div>"),
        $boxPopup.$pop.$content.find(".bt.create").click(function () {
            openURLFromIframe(isIOS ? appIOS.url : "http://www.incredibox.com");
        }),
        $boxPopup.$pop.$content.find(".bt.replay").bind(evtClick, clickReplayMix),
        $boxPopup.$pop.reflow(),
        $boxPopup.open({ type: "action", bck: "", unlock: !0 });
}
function clickBtValidFormMix() {
    function a() {
        TweenMax.delayedCall(1, function () {
            removeSpinnerBt(w), $boxPopup.$box.close(popupShare);
        });
    }
    if ((launchImmersiveMode(), !formProcessing)) {
        (formProcessing = !0), lock();
        var b = $boxPopup.$pop.$content.find(".formzone #input-name"),
            c = $boxPopup.$pop.$content.find(".formzone #input-title"),
            d = $boxPopup.$pop.$content.find(".formzone #input-dedi"),
            e = b.val(),
            f = c.val(),
            g = d.val(),
            h = trim(recordMix.getXML()),
            i = getDateNow(),
            j = app.version,
            k = isIOS ? "ios" : isAndroid ? "and" : "web",
            l = inApp ? device.version : "unknown",
            m = getUniqLink(),
            n = inApp ? device.model : "unknown",
            o = appIOS.version,
            p = inApp ? device.uuid : "unknown",
            q = storage.getItem("player-id") || "unknown";
        (e = e.substr(0, 26)), (f = f.substr(0, 26)), (g = g.substr(0, 26));
        var r = e.split(" ").join(""),
            s = f.split(" ").join(""),
            t = g.split(" ").join(""),
            u = /[^A-Za-z0-9\u00C0-\u017F '-]/;
        if (u.test(r)) invalidField(b);
        else if (u.test(s)) invalidField(c);
        else if (u.test(t)) invalidField(d);
        else if ("" === r) invalidField(b);
        else if ("" === s) invalidField(c);
        else {
            $boxPopup.$pop.$content.find(".formzone input").blur();
            var v = { mymix: !0, online: !1, link: m, name: ucwords(e), title: ucwords(f), dedi: ucwords(g), mix: h, date: i, app: j, model: n, os: k, uuid: p, osversion: l, appcode: o, nbview: 0, nblike: 0, playerid: q },
                w = $boxPopup.$pop.$content.find(".bt.valid");
            addSpinnerBt(w), recordMix.setData(v), localMixObject.saveMix(v), storage.setItem("user-djname", ucwords(e)), icloud.save("user-djname", ucwords(e)), delete XHRmemotime.mymix, hasNetwork ? saveMixDB(v, a) : a();
        }
    }
}
function invalidField(a) {
    a.addClass("invalid").one(animationEnd, function (a) {
        $(a.target).removeClass("invalid");
    }),
        (formProcessing = !1),
        unlock();
}
function popupShare() {
    (formProcessing = !1),
        $boxPopup.$pop.clean(),
        $boxPopup.$pop.$title.html(STR("pop.shareTitle")),
        $boxPopup.$pop.$text.html(STR("pop.shareText")),
        $boxPopup.$pop.$content.append("<div class='bt mail color'><div class='bck'><div class='bckimg'></div></div><div class='hitzone'></div></div>"),
        $boxPopup.$pop.$content.append("<div class='bt facebook color'><div class='bck'><div class='bckimg'></div></div><div class='hitzone'></div></div>"),
        $boxPopup.$pop.$content.append("<div class='bt twitter color'><div class='bck'><div class='bckimg'></div></div><div class='hitzone'></div></div>"),
        $boxPopup.$pop.$content.append("<div class='bt link color'><div class='bck'><div class='bckimg'></div></div><div class='hitzone'></div></div>"),
        $boxPopup.$pop.$content.find(".bt.mail").bind(evtClick, clickBtShareMail),
        $boxPopup.$pop.$content.find(".bt.facebook").bind(evtClick, clickBtShareFacebook),
        $boxPopup.$pop.$content.find(".bt.twitter").bind(evtClick, clickBtShareTwitter),
        $boxPopup.$pop.$content.find(".bt.link").bind(evtClick, clickBtCopyLink),
        $boxPopup.$pop.reflow(),
        $boxPopup.open({ type: "action", bck: "", unlock: !0 }),
        ($boxPopup.funcOnClose = blurAll);
}
function clickBtShareMail() {
    socialSharing("mail", $(this));
}
function clickBtShareFacebook() {
    socialSharing("facebook", $(this));
}
function clickBtShareTwitter() {
    socialSharing("twitter", $(this));
}
function clickBtShareLink() {
    socialSharing("link", $(this));
}
function clickBtCopyLink() {
    socialSharing("clipboard", $(this));
}
function saveMixDB(a, b, c) {
    var d = c || b;
    xhr(
        "POST",
        "http://www.incredibox.com/php/ios-save-mix-db.php",
        a,
        function (c) {
            "success" == c.state ? ((a.online = !0), (a.link = c.link), (a.id = c.id), localMixObject.saveMix(a), delete XHRmemotime.latest, b()) : d();
        },
        function (a) {
            d();
        }
    );
}
function checkWaitList() {
    notnull(localMixObject);
}
function socialSharing(a, b, c, d) {
    if ((lock(), addSpinnerBt(b), hasNetwork)) {
        var e = isnull(c) ? recordMix.getData() : c;
        e.mymix === !0
            ? e.online
                ? socialSharingOk(a, b, e)
                : saveMixDB(
                      e,
                      function () {
                          socialSharingOk(a, b, e), void 0 !== d && changeLineInfo(d);
                      },
                      function () {
                          $boxDialog.open(STR("pop.sharingBugText"), STR("pop.sharingBugTitle"), [STR("bt.ok")], [errorcbk]), removeSpinnerBt(b);
                      }
                  )
            : socialSharingOk(a, b, e);
    } else {
        var f = $mixlist.hasClass("show") ? STR("pop.noCoShareText") : STR("pop.noCoShareText") + " " + STR("pop.noCoShareText2");
        $boxDialog.open(
            f,
            STR("pop.noNetworkTitle"),
            [STR("bt.ok")],
            [
                function () {
                    removeSpinnerBt(b);
                },
            ]
        ),
            unlock();
    }
}
function addSpinnerBt(a) {
    a.find(".bck").append("<div class='spinner'><div class='bckspin'></div><div class='spin'></div></div>"), a.addClass("spinning");
}
function removeSpinnerBt(a) {
    a.find(".spinner").remove(), a.removeClass("spinning");
}
function socialSharingOk(a, b, c) {
    function d() {
        $boxDialog.open(STR("pop.shareClipboard"), STR("pop.infoTitle"), [STR("bt.ok")], []), e();
    }
    function e() {
        removeSpinnerBt(b);
    }
    function f() {
        removeSpinnerBt(b);
    }
    var g = c,
        h = g.name,
        i = g.title,
        j = (g.dedi, g.date, "http://www.incredibox.com/mix/" + g.link),
        k = "http://www.incredibox.com/img/share/visu-share-v" + app.version + "@2x.png",
        l = "http://www.incredibox.com/img/share/visu-share-v" + app.version + ".png",
        m = STR("pop.shareSubject"),
        n = STR("pop.sharePresentMix").split("<name>").join(h).split("<title>").join(i),
        o = STR("pop.shareTextLike"),
        p = STR("pop.shareTextBeCool"),
        q = n + "\n" + j + "\n\n" + o + "\n\n---------------------------\n\nApp Store: " + appIOS.url + "\nPlay Store" + appAndroid.url,
        r = "#incredibox",
        s = p + " #incredibox",
        t = n + " " + p + " #incredibox";
    if (inApp)
        switch (a) {
            case "mail":
                window.plugins.socialsharing.shareViaEmail(q, m, null, null, null, [l], e, f);
                break;
            case "facebook":
                window.plugins.socialsharing.shareViaFacebook(r, k, j, e, f);
                break;
            case "twitter":
                window.plugins.socialsharing.shareViaTwitter(s, k, j, e, f);
                break;
            case "clipboard":
                cordova.plugins.clipboard.copy(j, d, f);
                break;
            case "global":
                window.plugins.socialsharing.share(t, m, k, j, e, f),
                    (isiPad || isiPadPro) &&
                        (window.plugins.socialsharing.iPadPopupCoordinates = function () {
                            var a = b[0].getBoundingClientRect();
                            return a.left + "," + a.top + "," + a.width + "," + a.height;
                        });
        }
    else TweenMax.delayedCall(1, removeSpinnerBt, [b]);
    unlock();
}
function sendFeedback() {
    if (inApp) {
        var a = device.platform + " App feedback",
            b = "<br><br>----------------------------------------------";
        (b += "<br>App : " + appIOS.version),
            (b += "<br>Game : " + app.name + " - v" + app.version),
            (b += "<br>DJ Name : " + (storage.getItem("user-djname") || "")),
            (b += "<br>Device : " + device.modelname + " - " + device.manufacturer),
            (b += "<br>System : " + device.platform + " - " + device.version),
            (b += "<br>ID : " + device.uuid + " - " + device.serial),
            window.plugins.socialsharing.shareViaEmail("<br><br><br><i>" + b + "</i>", a, "feedback@incredibox.com", null, null, []);
    }
}
var debugMute = notnull(getParameterByName("mute")),
    debugGame = notnull(getParameterByName("game")),
    screenW,
    screenH,
    templateW = 1024,
    templateH = 768,
    stageScale = 1,
    pictoScale = 1,
    poloScale = 1,
    emulate = {
        device: {
            iPhone4: { width: 480, height: 320 },
            iPhone5: { width: 568, height: 320 },
            iPhone6: { width: 667, height: 375 },
            iPhone6s: { width: 736, height: 414 },
            iPad: { width: 1024, height: 768 },
            iPadPro: { width: 1366, height: 1024 },
            GalaxyTab: { width: 1280, height: 800 },
            GalaxyTab2: { width: 1024, height: 600 },
            Nexus7: { width: 960, height: 600 },
            Nexus7: { width: 1024, height: 500 },
            LGH870: { width: 720, height: 360 },
        },
        get: function (a) {
            return this.device[a];
        },
        test: function (a) {
            var b = this.get(a || "iPhone6s");
            (screenW = b.width), (screenH = b.height);
        },
    },
    phoneModel = {
        model: {
            "iPhone1,1": "iPhone",
            "iPhone1,2": "iPhone 3G",
            "iPhone2,1": "iPhone 3GS",
            "iPhone3,1": "iPhone 4 (GSM)",
            "iPhone3,3": "iPhone 4 (CDMA)",
            "iPhone4,1": "iPhone 4S",
            "iPhone5,1": "iPhone 5 (A1428)",
            "iPhone5,2": "iPhone 5 (A1429)",
            "iPhone5,3": "iPhone 5c (A1456/A1532)",
            "iPhone5,4": "iPhone 5c (A1507/A1516/A1529)",
            "iPhone6,1": "iPhone 5s (A1433/A1453)",
            "iPhone6,2": "iPhone 5s (A1457/A1518/A1530)",
            "iPhone7,1": "iPhone 6 Plus",
            "iPhone7,2": "iPhone 6",
            "iPhone8,1": "iPhone 6s",
            "iPhone8,2": "iPhone 6s Plus",
            "iPhone8,4": "iPhone SE",
            "iPhone9,1": "iPhone 7 (A1660/A1779/A1780)",
            "iPhone9,2": "iPhone 7 Plus (A1661/A1785/A1786)",
            "iPhone9,3": "iPhone 7 (A1778)",
            "iPhone9,4": "iPhone 7 Plus (A1784)",
            "iPad1,1": "iPad",
            "iPad2,1": "iPad 2 (Wi-Fi)",
            "iPad2,2": "iPad 2 (GSM)",
            "iPad2,3": "iPad 2 (CDMA)",
            "iPad2,4": "iPad 2 (Wi-Fi, revised)",
            "iPad2,5": "iPad mini (Wi-Fi)",
            "iPad2,6": "iPad mini (A1454)",
            "iPad2,7": "iPad mini (A1455)",
            "iPad3,1": "iPad (3rd gen, Wi-Fi)",
            "iPad3,2": "iPad (3rd gen, Wi-Fi+LTE Verizon)",
            "iPad3,3": "iPad (3rd gen, Wi-Fi+LTE AT&T)",
            "iPad3,4": "iPad (4th gen, Wi-Fi)",
            "iPad3,5": "iPad (4th gen, A1459)",
            "iPad3,6": "iPad (4th gen, A1460)",
            "iPad4,1": "iPad Air (Wi-Fi)",
            "iPad4,2": "iPad Air (Wi-Fi+LTE)",
            "iPad4,3": "iPad Air (Rev)",
            "iPad4,4": "iPad mini 2 (Wi-Fi)",
            "iPad4,5": "iPad mini 2 (Wi-Fi+LTE)",
            "iPad4,6": "iPad mini 2 (Rev)",
            "iPad4,7": "iPad mini 3 (Wi-Fi)",
            "iPad4,8": "iPad mini 3 (A1600)",
            "iPad4,9": "iPad mini 3 (A1601)",
            "iPad5,1": "iPad mini 4 (Wi-Fi)",
            "iPad5,2": "iPad mini 4 (Wi-Fi+LTE)",
            "iPad5,3": "iPad Air 2 (Wi-Fi)",
            "iPad5,4": "iPad Air 2 (Wi-Fi+LTE)",
            "iPad6,3": "iPad Pro (9.7 inch) (Wi-Fi)",
            "iPad6,4": "iPad Pro (9.7 inch) (Wi-Fi+LTE)",
            "iPad6,7": "iPad Pro (12.9 inch, Wi-Fi)",
            "iPad6,8": "iPad Pro (12.9 inch, Wi-Fi+LTE)",
            "iPad6,11": "iPad 9.7-Inch 5th Gen (Wi-Fi Only)",
            "iPad6,12": "iPad 9.7-Inch 5th Gen (Wi-Fi/Cellular)",
            "iPod1,1": "iPod touch",
            "iPod2,1": "iPod touch (2nd gen)",
            "iPod3,1": "iPod touch (3rd gen)",
            "iPod4,1": "iPod touch (4th gen)",
            "iPod5,1": "iPod touch (5th gen)",
            "iPod7,1": "iPod touch (6th gen)",
        },
        get: function (a) {
            var b = this.model[a];
            return isnull(b) ? a : b;
        },
    },
    CloudSync = function () {
        function a(a) {
            if (isnull(a["player-id"])) {
                var b = uniqid("-");
                e.save("player-id", b), storage.setItem("player-id", b);
            } else (f = !1), storage.setItem("player-id", a["player-id"]);
            notnull(storage.getItem("user-djname-gc"))
                ? (e.save("user-djname", storage.getItem("user-djname")), storage.remove("user-djname-gc"))
                : notnull(a["user-djname"])
                ? storage.setItem("user-djname", a["user-djname"])
                : notnull(storage.getItem("user-djname")) && e.save("user-djname", storage.getItem("user-djname")),
                notnull(a["user-lang"]) ? storage.setItem("user-lang", a["user-lang"]) : notnull(storage.getItem("user-lang")) && e.save("user-lang", storage.getItem("user-lang"));
            var c = storage.getAllItem(),
                d = {};
            for (var g in c) g.indexOf("mix-") != -1 && (d[g] = jsonDecode(c[g]));
            f ? sendMixInCloud(d) : (getMixFromCloud(a, d), deleteLocalMix(a, d));
        }
        function b(a) {}
        function c(a) {}
        function d() {}
        var e = this,
            f = !0;
        return (
            (this.sync = function () {
                iCloudKV.sync(a, b);
            }),
            (this.save = function (a, b) {
                inApp && isIOS && ((b = "string" != typeof b ? jsonEncode(b) : b), iCloudKV.save(a, b, function () {}));
            }),
            (this.load = function (a) {
                iCloudKV.load(a, c, d);
            }),
            (this.remove = function (a) {
                inApp && isIOS && iCloudKV.remove(a, function () {});
            }),
            (this.clear = function (a) {
                for (var b in a) e.remove(b);
            }),
            this
        );
    },
    LocalStorage = function () {
        return (
            (this.setItem = function (a, b) {
                window.localStorage.setItem(a, b);
            }),
            (this.getItem = function (a) {
                return window.localStorage.getItem(a);
            }),
            (this.getAllItem = function () {
                return window.localStorage;
            }),
            (this.removeItem = function (a) {
                window.localStorage.removeItem(a);
            }),
            (this.clear = function () {
                window.localStorage.clear();
            }),
            (this.weight = function () {
                var a,
                    b,
                    c = window.localStorage,
                    d = 0,
                    e = "LS | --------------------------\n";
                for (b in c) (a = 2 * (c[b].length + b.length)), (d += a), (e += "LS | " + b.substr(0, 50) + " = " + (a / 1024).toFixed(2) + " KB\n");
                return (e += "LS | Total = " + (d / 1024).toFixed(2) + " KB\n"), (e += "LS | --------------------------");
            }),
            this
        );
    },
    LocalMixObject = function () {
        var a = this;
        (this.mixlist = []),
            (this.saveMix = function (a, b) {
                var c = b || !0;
                if (notnull(a)) {
                    delete a.addColor, delete a.intop50;
                    var d = a.link.indexOf("mix-") == -1 ? "mix-" + a.link : a.link,
                        e = jsonEncode(a);
                    return storage.setItem(d, e), c && icloud.save(d, e), !0;
                }
                return !1;
            }),
            (this.deleteMix = function (a) {
                var b = a.indexOf("mix-") == -1 ? "mix-" + a : a;
                return !!notnull(storage.getItem(b)) && (storage.removeItem(b), icloud.remove(b), !0);
            }),
            (this.getMix = function (a) {
                return !!notnull(storage.getItem(a)) && jsonDecode(storage.getItem(a));
            }),
            (this.getAllMix = function (a) {
                var b = a || !1,
                    c = [],
                    d = storage.getAllItem();
                for (var e in d) e.indexOf("mix-") != -1 && (b ? (e.indexOf("v" + app.version) == -1 && e.indexOf("-IOSV" + app.version) == -1) || c.push(jsonDecode(d[e])) : c.push(jsonDecode(d[e])));
                return c;
            }),
            (this.getAllMixByVersion = function (b) {
                var c = a.getAllMix(!0);
                return (
                    c.sort(function (a, b) {
                        return b.date > a.date ? 1 : b.date < a.date ? -1 : 0;
                    }),
                    b === !0 && (c = c.reverse()),
                    (a.mixlist = c),
                    c
                );
            }),
            (this.getLastMix = function () {
                var a = getAllMixByVersion(),
                    b = a.length;
                return b > 0 ? a[b - 1] : null;
            }),
            (this.getLastDjName = function () {
                var b = a.getLastMix();
                return notnull(b) ? b.name : "";
            }),
            (this.getStatMixOnline = function (b) {
                for (var c = a.getAllMix(), d = c.length, e = [], f = [], g = 0; g < d; g++) {
                    var h = c[g];
                    h.online && (isnull(h.id) ? e.push(h.link) : f.push(parseInt(h.id)));
                }
                e.length > 0 || f.length > 0
                    ? xhr(
                          "POST",
                          "http://www.incredibox.com/php/ios-get-stat-mix.php",
                          { tablink: jsonEncode(e), tabid: jsonEncode(f) },
                          function (c) {
                              if ("success" == c.state) {
                                  XHRmemotime.mymix = new Date();
                                  for (var d = 0, e = c.list.length; d < e; d++) {
                                      var f = jsonDecode(c.list[d]),
                                          g = a.getMix("mix-" + f.link);
                                      (g.id = f.id), (g.nbview = f.nbview), (g.nblike = f.nblike), a.saveMix(g);
                                  }
                                  void 0 !== b && b();
                              }
                          },
                          function (a) {}
                      )
                    : void 0 !== b && b();
            });
    },
    PoloObject = function (a, b, c, d, e, f) {
        function g() {
            var a = random(7) + 2;
            TweenMax.delayedCall(a, i);
        }
        function h() {
            TweenMax.killTweensOf(i);
        }
        function i() {
            qa = getTime();
            var a = random(ua.length - 1);
            (ta = ua[a]), (ra = ta.length), (sa = ra / (36 * ra)), v.mode("cligne");
        }
        function j() {
            v.mode("normal");
        }
        function k() {
            (ba.globalAlpha = 1), ba.drawImage(fa, 0, 0, xa, ya, v.posX, v.posY, va, wa);
        }
        function l(a, b) {
            ba.drawImage(fa, a * pa, b * pa, xa, 40 * pa, v.posX, v.posY + 97, va, 40);
        }
        function m() {
            (ba.globalAlpha = 1 - ha), ba.drawImage(fa, xa, 0, xa, ya, v.posX, v.posY, va, wa);
        }
        function n() {
            k(), l(492, 0), m();
        }
        function o() {
            v.updateLoader(), (ba.globalAlpha = 1), ba.drawImage(M, 0, 0, Ba, Ca, v.posX, v.posY, za, Aa);
        }
        function p() {
            v.updateLoader(), (ba.globalAlpha = 1), ba.drawImage(M, 0, 0, Ba, Ca, v.posX, v.posY, za, Aa), (ba.globalAlpha = 1 - ia), ba.drawImage(M, 2 * Ba, 0, Ba, Ca, v.posX, v.posY, za, Aa);
        }
        function q() {
            R ? n() : (v.anime(), (ba.globalAlpha = 1), ba.drawImage(M, Ba, 0, Ba, Ca, v.posX, v.posY, za, Aa), ba.drawImage(M, C * pa, D * pa + 1, Ba, Math.floor(Q * pa) - 1, v.posX + E, v.posY + F + 1, za, Q - 1));
        }
        function r() {
            var a = timenow - qa,
                b = Math.floor(a * sa);
            (b = b > ra - 1 ? ra - 1 : b), k(), l(492, 40 * ta[b]), m(), b >= ra - 1 && j();
        }
        function s() {
            if (V) q();
            else {
                k();
                var a = v.getPupPos(ja, ka),
                    b = v.getPupPos(la, ma);
                ba.beginPath(),
                    ba.fill(),
                    ba.arc(a[0], a[1], na, 0, 2 * Math.PI, !0),
                    ba.arc(b[0], b[1], na, 0, 2 * Math.PI, !0),
                    ba.closePath(),
                    ba.fill(),
                    mouseY < z + v.posY + 50 ? l(328, 120) : mouseY >= z + v.posY + 50 && mouseY < z + v.posY + 100 ? l(328, 80) : mouseY >= z + v.posY + 180 ? l(328, 40) : l(328, 0);
            }
        }
        function t() {
            s(), m();
        }
        function u() {
            s();
        }
        this.sound = new SoundObject(c);
        var v = this,
            w = $("#polo" + a, b).css({ left: e + 20 + "px", top: f + "px" }),
            x = $('<div class="zone"><div class="loader"><div class="bar"></div></div><div class="pointer"></div></div>');
        $("#box-loader").append(x), x.css({ left: e + 20 + "px" });
        var y,
            z,
            A,
            B,
            C,
            D,
            E,
            F,
            G,
            H,
            I,
            J,
            K,
            L,
            M,
            N,
            O,
            P,
            Q,
            R,
            S,
            T,
            U,
            V,
            W,
            X,
            Y = $(".loader", x),
            Z = $(".bar", x),
            _ = $(".pointer", x),
            aa = a,
            ba = d,
            ca = "",
            da = "normal",
            ea = !1,
            fa = spritePolo,
            ga = n,
            ha = 0.5,
            ia = 0.3,
            ja = 61,
            ka = 118,
            la = 102,
            ma = 118,
            na = 7,
            oa = !1,
            pa = isiPhone4s ? 0.6 : 1;
        (this.posX = e),
            (this.posY = 400),
            (this.pictoHoverId = null),
            (this.reinit = function () {
                g(), v.draw(), (oa = !1), (v.pictoHoverId = null), (C = D = E = F = G = H = I = 0), (ca = J = K = L = M = N = O = P = Q = null), (R = S = T = U = V = W = X = !1);
            }),
            (this.setPosition = function () {
                (B = screenH - 252 * stageScale),
                    (y = b.offset().left),
                    (z = b.offset().top),
                    (A = { px: w.offset().left, py: w.offset().top, width: w.outerWidth() * stageScale * poloScale, height: w.outerHeight() * stageScale * poloScale });
            }),
            (this.getId = function () {
                return aa;
            }),
            (this.getPicto = function () {
                return J;
            }),
            (this.getAssetId = function () {
                return K;
            }),
            (this.getMoment = function () {
                return G;
            }),
            (this.getLoop = function () {
                return H;
            }),
            (this.getEnabled = function () {
                return S;
            }),
            (this.getBusy = function () {
                return T;
            }),
            (this.getMode = function () {
                return da;
            }),
            (this.getDeleting = function () {
                return V;
            }),
            (this.getPlaying = function () {
                return U;
            }),
            (this.getDiv = function () {
                return w;
            }),
            (this.getMute = function () {
                return W;
            }),
            (this.getSolo = function () {
                return X;
            }),
            (this.setSolo = function (a) {
                X = a;
            }),
            (this.setLoop = function (a) {
                H = a;
            }),
            (this.setMoment = function (a) {
                G = a;
            }),
            (this.setPlaying = function (a) {
                U = a;
            }),
            (this.habiller = function (a, b, c, d) {
                v.checkState(),
                    (J = a),
                    (K = a.getId()),
                    (G = b),
                    (L = c.imgData),
                    (Q = c.headHeight),
                    (M = c.imgSprite),
                    (ca = c.color),
                    (I = L.length),
                    (T = !0),
                    Z.css({ "background-color": "#" + ca }),
                    _.css({ "background-color": "#" + ca }),
                    ea ? v.mode("waiting") : ((R = !0), TweenMax.delayedCall(d, v.rebond)),
                    recordMix.xmlAction("append", v);
            }),
            (this.checkState = function () {
                V && (ea || (TweenMax.killTweensOf(v), v.remonte(0, !0, !1)));
            }),
            (this.deshabiller = function (a, b) {
                (V = !0), (T = !1);
                var c = (v.posY, b ? 0 : 0.3);
                TweenMax.to(v, c, { posY: 400, ease: Quint.easeIn, onComplete: v.remonte, onCompleteParams: [0, !0, b], delay: a, overwrite: !0 }), this.hideLoader(!0), recordMix.xmlAction("remove", v);
            }),
            (this.baisser = function (a, b) {
                this.posY = 400;
            }),
            (this.remonte = function (a, b, c) {
                (ea = !0), b === !0 && (J.reactiver(!0), v.reinit(), majListPoloDrop()), v.mode("normal");
                var d = 40 + Math.round(60 * Math.random()),
                    e = (v.posY, c ? 0 : 0.4),
                    f = c ? 0 : a;
                TweenMax.to(v, e, {
                    posY: d,
                    ease: Back.easeOut,
                    delay: f,
                    onComplete: function () {
                        ea = !1;
                    },
                    overwrite: !0,
                });
            }),
            (this.rebond = function (a) {
                var b = v.posY,
                    c = b - 20,
                    d = U ? "anime" : "waiting";
                (d = v.getMute() ? "mute" : d), v.mode(d), TweenMax.to(v, 0.1, { posY: c, ease: Quint.easeOut, onComplete: v.rebond2, overwrite: !0 }), (R = !1);
            }),
            (this.rebond2 = function () {
                var a = v.posY,
                    b = a + 20;
                TweenMax.to(v, 0.2, { posY: b, ease: Back.easeOut, overwrite: !0 });
            }),
            (this.showLoader = function () {
                TweenMax.to(Y, 0.3, { scaleX: 1, ease: Quint.easeOut, overwrite: !0 });
            }),
            (this.showYou = function () {
                U &&
                    _.addClass("show").one(animationEnd, function (a) {
                        $(a.target).removeClass("show");
                    });
            }),
            (this.hideLoader = function (a) {
                TweenMax.to(Y, 0.2, { scaleX: 0, ease: Quint.easeOut, overwrite: !0 });
            });
        var qa,
            ra,
            sa = 0,
            ta = [],
            ua = [
                [0, 1, 2, 2, 1, 0],
                [0, 3, 4, 5, 6, 7, 8, 0],
                [0, 3, 4, 4, 3, 0],
                [0, 1, 2, 2, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 1, 2, 2, 2, 2, 0],
                [0, 1, 2, 2, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 1, 2, 2, 9, 9, 9, 9, 2, 2, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 0],
                [0, 1, 2, 2, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 2, 2, 2, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 1, 2, 2, 10, 10, 10, 10, 10, 2, 2, 0],
            ],
            va = 164,
            wa = 400,
            xa = va * pa,
            ya = wa * pa,
            za = 164,
            Aa = 380,
            Ba = za * pa,
            Ca = Aa * pa;
        (this.mode = function (a) {
            if (a != da)
                switch ((h(), (da = a))) {
                    case "normal":
                        (ga = n), g();
                        break;
                    case "cligne":
                        ga = r;
                        break;
                    case "regarde":
                        ga = t;
                        break;
                    case "hover":
                        ga = u;
                        break;
                    case "waiting":
                        ga = o;
                        break;
                    case "anime":
                        ga = q;
                        break;
                    case "mute":
                        ga = p;
                }
        }),
            (this.draw = function () {
                ga();
            }),
            (this.updateLoader = function () {
                Z.css({ width: pctMetronome + "%" });
            }),
            (this.anime = function () {
                var a = frame;
                boucleA && I == frameTotal && (a += frameHalf), a >= I - 1 && (a = I - 1), (C = L[a][0]), (D = L[a][1]), (E = L[a][2]), (F = L[a][3]);
            }),
            (this.getPupPos = function (a, b) {
                var c = (mouseX - y) / stageScale,
                    d = (mouseY - z) / stageScale,
                    e = c / poloScale - a - this.posX,
                    f = d / poloScale - b - this.posY,
                    g = Math.atan2(f, e),
                    h = na * Math.cos(g) + (v.posX + a),
                    i = na * Math.sin(g) + (v.posY + b);
                return [h, i];
            }),
            isMixReplay &&
                ((this.activerClick = function () {
                    S = !0;
                }),
                (this.desactiverClick = function () {
                    S = !1;
                }));
        var Da,
            Ea = !1,
            Fa = !1,
            Ga = 0,
            Ha = 0,
            Ia = isTouchDevice ? 60 * stageScale : 20,
            Ja = 0,
            Ka = 0,
            La = isTouchDevice ? 60 * stageScale : 20;
        (this.activerClick = function () {
            (S = !0), w.bind(evtPress, v.touchStart);
        }),
            (this.desactiverClick = function () {
                (S = !1), clearTimeout(Da), w.unbind(evtPress, v.touchStart), w.unbind(evtMove, v.touchMove), w.unbind(evtPressEnd, v.touchEnd);
            }),
            (this.touchStart = function (a) {
                Ea = Fa = !1;
                var b = isTouchDevice ? a.originalEvent.targetTouches[0] : a;
                (Ga = Ha = b.pageX),
                    (Ja = Ka = b.pageY),
                    (Da = setTimeout(function () {
                        v.touchLong(a);
                    }, 250)),
                    w.bind(evtMove, v.touchMove),
                    w.bind(evtPressEnd, v.touchEnd);
            }),
            (this.touchMove = function (a) {
                var b = isTouchDevice ? a.originalEvent.targetTouches[0] : a;
                (Ha = b.pageX), (Ka = b.pageY), Ka > Ja + La && Math.abs(Ha - Ga) < Ia && (clearTimeout(Da), clickPolo(v));
            }),
            (this.touchLong = function (a) {
                clearTimeout(Da), (X = !0), soloPolo(v);
            }),
            (this.touchEnd = function (a) {
                (Ea = !0), clearTimeout(Da), w.unbind(evtMove, v.touchMove), w.unbind(evtPressEnd, v.touchEnd), X ? (1 == getTotalSolo() ? stopSoloPolo() : v.mute(), (X = !1)) : v.switchMute();
            }),
            (this.playSound = function () {
                (U = !0), this.sound.play(0), H++;
            }),
            (this.stopSound = function (a) {
                (a = !isnull(a) && a), (U = !1), this.sound.stop(a);
            }),
            (this.mute = function () {
                (W = !0), this.mode("mute"), this.sound.mute(), recordMix.xmlAction("mute", v);
            }),
            (this.unmute = function () {
                (W = !1), U ? this.mode("anime") : this.mode("waiting"), this.sound.unmute(), recordMix.xmlAction("unmute", v);
            }),
            (this.switchMute = function () {
                W ? v.unmute() : v.mute();
            }),
            (this.hitTest = function (a, b) {
                var c = a / stageScale,
                    d = b / stageScale;
                return c > A.px && c < A.px + A.width && d > A.py && d < B;
            }),
            (this.hitTestPicto = function (a) {
                if (!T && !V) {
                    var b = a.getBound();
                    return v.hitTest(Math.round(b.px * stageScale), Math.round(b.py * stageScale));
                }
                return !1;
            }),
            (this.rollover = function () {
                oa || ((oa = !0), v.mode("hover"));
            }),
            (this.rollout = function (a) {
                var b = !isnull(a) && a;
                b ? ((oa = !1), v.mode("normal")) : oa && ((oa = !1), v.mode("regarde"));
            }),
            this.setPosition(),
            this.reinit();
    },
    PictoObject = function (a, b) {
        var c,
            d,
            e,
            f,
            g,
            h = this,
            i = a,
            j = $("#picto" + i, b),
            k = isTouchDevice ? j : $body,
            l = $(".scale", j),
            m = j.innerWidth(),
            n = isMobile ? 1.1 : 1.2,
            o = 0,
            p = { px: 0, py: 0 };
        (this.getDiv = function () {
            return j;
        }),
            (this.getId = function () {
                return i;
            }),
            (this.getColor = function () {
                return g;
            }),
            (this.use = !1),
            (this.polo = null),
            (this.init = function (a, b) {
                (o = -(i * m)), j.css({ top: b + "px", left: a + "px" }), l.css({ "background-position": String(o) + "px 0px" }), h.setPosition();
            }),
            (this.setPosition = function () {
                (f = j.parent().offset().top), (e = j.parent().offset().left), (c = j.offset().left), (d = j.offset().top);
            }),
            (this.getBound = function () {
                return p;
            }),
            isMixReplay && ((this.activer = function () {}), (this.desactiver = function () {})),
            (this.activer = function () {
                h.desactiver(), j.bind(evtPress, h.touchStart);
            }),
            (this.desactiver = function () {
                j.unbind(), k.unbind(evtMove, h.touchMove), k.unbind(evtPressEnd, h.touchEnd);
            }),
            (this.touchStart = function (a) {
                j.unbind(), k.bind(evtMove, h.touchMove), k.bind(evtPressEnd, h.touchEnd);
                var b = a;
                (a = isTouchDevice ? a.originalEvent : a), j.removeClass("flashme"), j.addClass("drag"), h.touchMove(b), pictoOnDrag(h);
            }),
            (this.touchMove = function (a) {
                a = inApp ? a.originalEvent : a;
                var b = isTouchDevice ? a.targetTouches[0] : a;
                h.bouger(b.pageX, b.pageY), a.preventDefault(), pictoOnMove(h);
            }),
            (this.touchEnd = function () {
                k.unbind(), j.removeClass("drag"), pictoOnDrop(h);
            }),
            (this.bouger = function (a, b) {
                p = { px: a, py: b };
                var e = (a - c) / stageScale,
                    f = (b - d) / stageScale;
                (e -= (m / 2) * pictoScale), (f -= (m / n) * pictoScale), (e /= pictoScale), (f /= pictoScale), j.css({ transform: "translate3d(" + e + "px, " + f + "px, 0px)" });
            }),
            (this.replacer = function () {
                j.addClass("replacer").one(animationEnd, h.replacerFini);
            }),
            (this.forceReplacer = function () {
                h.desactiver(), j.removeClass("drag"), j.css({ transform: "translate3d(0px ,0px, 0px)" }), l.css({ "background-position": String(o) + "px -68px" }), h.reactiver();
            }),
            (this.absorber = function (a) {
                j.css({ transform: "translate3d(0px, 0px, 0px)" }), l.css({ "background-position": String(o) + "px -68px" }), j.addClass("griser"), j.bind(evtPress, h.showYourPolo), (h.use = !0), (h.polo = a);
            }),
            (this.reactiver = function (a) {
                var b = a || !1;
                l.css({ "background-position": String(o) + "px 0px" }),
                    j.removeClass("griser"),
                    b && !modeRandom
                        ? j.addClass("flashme").one(animationEnd, function (a) {
                              $(a.target).removeClass("flashme"), h.replacerFini();
                          })
                        : h.replacerFini();
            }),
            (this.replacerFini = function () {
                j.removeClass("replacer"), j.css({ transform: "translate3d(0px ,0px, 0px)" }), (h.use = !1), h.activer();
            }),
            (this.showYourPolo = function () {
                h.polo.showYou();
            });
    },
    BonusObject = function (a, b, c, d) {
        var e = this,
            f = b,
            g = a + 1,
            h = $("#bt-bonus-" + g),
            i = $(".eye", h),
            j = $(".circle", h),
            k = $("#box-video .video#video" + g),
            l = $("#box-video .video#video" + g + " video"),
            m = l[0],
            n = !1,
            o = new ClockObject("canvas-bt-bonus-" + g),
            p = new SoundObject(c),
            q = d,
            r = numberArray(f.code.split(",")),
            s = r.length,
            t = 0,
            u = [];
        (this.video = m), l.bind("ended", e.videoEnded), o.init(60, 60, 1, 52, 16, "#8C8C8C"), (this.unlock = !1);
        for (var v = 0; v < s; v++) {
            var w = { obj: $(".svg.q" + (v + 1), h), col: $(".svg.q" + (v + 1) + " svg", h).css("fill") };
            u.push(w);
        }
        (this.getId = function () {
            return g - 1;
        }),
            (this.hasCode = function (a) {
                for (var b = 0; b < s; b++) if (a == r[b]) return !0;
                return !1;
            }),
            (this.checkCode = function (a, b) {
                for (var c = 0; c < s; c++) a == r[c] && (b ? e.showQuarter(c) : e.hideQuarter(c));
            }),
            (this.showQuarter = function (a) {
                t++;
                var b = u[a].obj,
                    c = u[a].col;
                t == s
                    ? (modeReplay || b.removeClass("hide").addClass("directshow"), e.showEye())
                    : modeReplay ||
                      (j.addClass("show").one(animationEnd, function (a) {
                          $(a.target).removeClass("show");
                      }),
                      j.css({ "border-color": c }),
                      b.removeClass("hide").addClass("directshow show"));
            }),
            (this.hideQuarter = function (a) {
                if (!modeReplay) {
                    var b = u[a].obj;
                    b.addClass("hide").one(animationEnd, function (a) {
                        $(a.target).removeClass("directshow show hide");
                    });
                }
                t == s && (cancelClickBtBonus(), this.hideEye()), t--, t < 0 && (t = 0);
            }),
            (this.hideClock = function () {
                o.stop(!0);
            }),
            (this.render = function (a) {
                o.render();
            }),
            (this.showEye = function () {
                modeReplay || i.addClass("bounce"), (e.unlock = !0);
            }),
            (this.reduceEye = function () {
                modeReplay || i.addClass("reduce");
            }),
            (this.hideEye = function () {
                modeReplay ||
                    i.addClass("hide").one(animationEnd, function (a) {
                        $(a.target).removeClass("bounce reduce hide");
                    }),
                    (e.unlock = !1),
                    e.hideClock();
            }),
            (this.touchStart = function (a) {
                e.unlock ? (e.click(), recordMix.xmlAction("bonus", e)) : loopOn && poloShowPointer(g);
            }),
            (this.click = function () {
                (getRemainingTime() < 500 && boucleA) ||
                    (clickBtBonus(g),
                    (e.unlock = !1),
                    e.reduceEye(),
                    j.addClass("showCircle").one(animationEnd, function (a) {
                        $(a.target).removeClass("showCircle");
                    }),
                    l.bind("timeupdate", e.timeUpdated),
                    (m.currentTime = 0),
                    m.play(),
                    p.prepare(q),
                    o.start(getRemainingTime(!boucleA), !0));
            }),
            (this.timeUpdated = function () {
                m.currentTime = 0;
            }),
            (this.play = function () {
                l.unbind("timeupdate", e.timeUpdated), o.start(loopDuration * app.nbloopbonus, !1), (n = !0), p.play(0), k.addClass("show");
            }),
            (this.stop = function () {
                l.unbind("timeupdate", e.timeUpdated), m.pause(), n && (p.stop(), o.stop(!0)), t == s && e.showEye(), (n = !1), k.removeClass("show");
            }),
            (this.videoEnded = function () {}),
            (this.pause = function () {
                n && (m.pause(), p.pause()), o.pause();
            }),
            (this.resume = function () {
                n && (m.play(), p.unpause()), o.resume();
            }),
            (this.enable = function () {
                h.bind(evtPress, e.touchStart);
            }),
            (this.disable = function () {
                h.unbind(evtPress, e.touchStart);
            }),
            this.enable();
    },
    SoundObject = function (a) {
        var b,
            c,
            d,
            e,
            f,
            g,
            h,
            i,
            j = this,
            k = a,
            l = !1,
            m = !1;
        (this.getMute = function () {
            return l;
        }),
            (this.prepare = function (a, g) {
                (d = a), (f = 0 == g ? 0 : 1), (f = debugMute ? 0 : f), (b = k.createBufferSource()), (b.buffer = d), (e = d.duration), (c = k.createGain()), (c.gain.value = f), b.connect(c), c.connect(k.destination);
            }),
            (this.getDuration = function () {
                return null != d ? d.duration : 0;
            }),
            (this.getCurrentTime = function () {
                return null != b ? b.context.currentTime : 0;
            }),
            (this.play = function (a, c) {
                (h = getTime()), c > 0 ? b.start(0, a) : b.start(0, a), l && this.mute();
            }),
            (this.stop = function (a) {
                null != b && ((b.onended = null), b.context.currentTime > 0 && j.fade(a));
            }),
            (this.fade = function (a) {
                if (null != b)
                    if (l) j.stopSource();
                    else
                        var d = a ? 0.03 : 0.3,
                            e = f,
                            g = setInterval(function () {
                                (e -= d), null != c && (c.gain.value = e), e <= 0 && ((e = 0), clearInterval(g), j.stopSource());
                            }, 5);
            }),
            (this.stopSource = function () {
                null != b && (isIOS && iosVersionNumber < 103 ? b.noteOff(0) : b.stop(0)), (b = null), (c = null), m || ((l = !1), (g = null), (h = 0), (i = 0));
            }),
            (this.pause = function (a) {
                (m = !0), (i = getTime() - h), i < 0 ? (i = 0) : i, this.stop(a);
            }),
            (this.unpause = function (a) {
                (m = !1), this.prepare(d, f), null != b && (a === !0 ? (this.play(i / 1e3, (loopDuration - i) / 1e3), this.loop(g)) : this.play(i / 1e3), (h = getTime() - i));
            }),
            (this.mute = function () {
                null != b && (c.gain.value = 0), (l = !0);
            }),
            (this.unmute = function () {
                null != b && (c.gain.value = 1), (l = !1);
            }),
            (this.loop = function (a) {
                (b.onended = a), (g = a);
            });
        this.checkSoundCanPlay = function (a, b) {
            return b(), !1;
        };
    },
    ClockObject = function (a) {
        var b,
            c,
            d,
            e,
            f,
            g,
            h,
            i,
            c,
            j,
            k,
            l,
            m,
            n = $("#" + a),
            o = n[0],
            p = o.getContext("2d"),
            q = 2 * Math.PI,
            r = Math.PI / 2,
            s = !1,
            t = !1,
            u = 0;
        (this.start = function (a, b) {
            (s = !0), (t = !1), (m = b), (k = a), (l = 100 / k), (j = getTime());
        }),
            (this.stop = function (a) {
                (s = !1), a ? p.clearRect(d - g - h / 2, e - g - h / 2, 2 * g + h, 2 * g + h) : ((t = !0), (b = m ? 0 : 1));
            }),
            (this.pause = function () {
                u = getTime();
            }),
            (this.resume = function () {
                var a = getTime() - u;
                j += a;
            }),
            (this.render = function () {
                if (s || t) {
                    if (s) {
                        var a = getTime() - j;
                        c = (a * l) / 100;
                    } else t && (c += 0.2 * (b - c));
                    c < 0.001 ? (c = 0.001) : c, c > 0.999 ? (c = 0.999) : c;
                    var f = m ? -r : q * c - r,
                        i = m ? q * c - r : -r;
                    p.clearRect(d - g - h / 2, e - g - h / 2, 2 * g + h, 2 * g + h),
                        p.beginPath(),
                        p.arc(d, e, g, f, i, !1),
                        p.stroke(),
                        t && ((0.001 != c && 0.999 != c) || ((t = !1), p.clearRect(d - g - h / 2, e - g - h / 2, 2 * g + h, 2 * g + h)));
                }
            });
        var v = !1;
        (this.checkAtEnd = function () {
            v = !0;
        }),
            (this.init = function (a, b, c, j, k, l) {
                (d = void 0 == a ? 0 : a),
                    (e = void 0 == b ? 0 : b),
                    (f = void 0 == c ? 1 : c),
                    (g = void 0 == j ? 18 : j),
                    (h = void 0 == k ? 6 : k),
                    (i = void 0 == l ? "#FFFFFF" : l),
                    (p.lineWidth = h),
                    (p.strokeStyle = i),
                    (p.globalAlpha = f);
            });
    },
    ReadingBar = function (a, b, c) {
        var d,
            e = this,
            f = $(a),
            g = $("#reading-buffer", f),
            h = $cntRecord.find("#t-spent"),
            i = $cntRecord.find("#t-duration"),
            j = !1,
            k = 0,
            l = "#D20A0A",
            m = "#36B460",
            n = "record",
            o = secToText(app.looptime * app.recmaxloop);
        (this.minLoop = b),
            (this.maxLoop = c),
            (this.maxTime = 0),
            (this.cntLoop = 0),
            (this.isFinished = function () {
                return this.cntLoop == this.maxLoop;
            }),
            (this.isLastLoop = function () {
                return this.cntLoop + 1 == this.maxLoop;
            }),
            (this.open = function (a) {
                return (
                    (n = a),
                    e.createRecordBlock(),
                    (e.cntLoop = 0),
                    (e.maxTime = "record" == n ? o : secToText(e.maxLoop * app.looptime)),
                    g.css({ transform: "scale(0)" }),
                    h.text("00:00"),
                    i.text(" / " + e.maxTime),
                    TweenMax.to(f, 0.4, { top: "0px", ease: Quint.easeOut }),
                    TweenMax.to($cntRecord, 0.4, { opacity: 1, display: "block", ease: Quint.easeOut, delay: "record" == n ? 0.4 : 0 }),
                    e
                );
            }),
            (this.close = function () {
                return TweenMax.to(f, 0.4, { top: "-10px", ease: Quint.easeIn }), TweenMax.to($cntRecord, 0.3, { opacity: 0, display: "none", ease: Quint.easeOut }), e;
            }),
            (this.start = function () {
                return (j = !0), (e.cntLoop = 0), (k = 0), "record" == n ? recordMix.start() : replayMix.start(), e;
            }),
            (this.stop = function () {
                return (j = !1), "record" == n ? recordMix.stop() : replayMix.stop(), e;
            }),
            (this.loop = function () {
                return e.cntLoop++, (k += d), e.isFinished() ? ("record" == n ? stopRecordMode() : stopReplayMode()) : "record" == n ? recordMix.loop() : replayMix.loop(), e;
            }),
            (this.render = function () {
                if (j) {
                    d = pctMetronome;
                    var a = Math.floor(k + d) / e.maxLoop;
                    h.text(secToText(getTimeSpent() + loopDuration * e.cntLoop)), g.css({ transform: "scale(" + a / 100 + ", 1)" });
                }
            }),
            (this.createRecordBlock = function () {
                var a = "record" == n ? l : m,
                    b = "record" == n ? decimal(e.minLoop / e.maxLoop, 2) : 0;
                $("#reading-block", f).css({ transform: "scale(" + b + ", 1)" }), $($cntRecord).css({ color: a }), g.css({ "background-color": a });
            }),
            this.createRecordBlock();
    },
    RenderRAF = function (a, b) {
        function c() {
            (f = 0), (g = 1e3 / l), (j = Date.now()), (h = j), d();
        }
        function d() {
            return !n && ((e = requestAnimationFrame(d)), (i = Date.now()), (k = i - j), void (k > g && ((j = i - (k % g)), m())));
        }
        var e,
            f,
            g,
            h,
            i,
            j,
            k,
            l = a || -1,
            m = b || function () {},
            n = !1;
        (this.start = function (a) {
            (l = a || l), (n = !1), c();
        }),
            (this.stop = function () {
                (n = !0), cancelAnimationFrame(e);
            });
    },
    inApp = checkInApp(),
    isDevice = inApp || checkOnDevice(),
    isTouchDevice = checkTouchDevice(),
    isMobile = !1,
    isIOS = !1,
    isAndroid = !1,
    isiPod = !1,
    isiPhone = !1,
    isiPhone4s = !1,
    isiPhone6s = !1,
    isiPad = !1,
    isiPadPro = !1,
    isMixReplay = "undefined" != typeof mixlink,
    appNumberVersion = isMixReplay ? mixlink.slice(-1) : getParameterByName("v"),
    appVersion = isnull(appNumberVersion) || isNaN(appNumberVersion) || 1 != appNumberVersion.length ? 4 : appNumberVersion,
    iosVersion,
    iosVersionNumber,
    hasNetwork = !1,
    storage = new LocalStorage(),
    icloud = new CloudSync(),
    localMixObject = new LocalMixObject(),
    evtClick,
    evtPress,
    evtPressEnd,
    evtMove,
    transitionEnd,
    animationEnd,
    $body,
    $lockAll,
    $lockPause,
    $lockStage,
    $fadeAll,
    $lockPicto,
    $lockBonus,
    $watchInfo,
    $mixlist,
    $poplist,
    $tabMymix,
    $tabDj,
    $tabLatest,
    $tabTop50,
    $home,
    $homeVersion,
    $homeTitre,
    $homeLoadbox,
    $homeLoadbar,
    $homeBtPlay,
    $homeBtList,
    $homeBtSwitch,
    $homeBtInfo,
    $homeBck,
    $boxVideo,
    $fadeVideo,
    $boxTop,
    $boxBottom,
    $boxBt2,
    $btTool,
    $boxBt,
    $btBack,
    $btHome,
    $btStop,
    $btRecord,
    $btLatest,
    $btClock,
    $btCreate,
    $homeBtListen,
    $btSave,
    $btStop,
    $btRecord,
    $btRandom,
    $btClock,
    $cntRecord,
    $boxDialog,
    $boxPopup,
    $boxPoptab,
    $boxSwitch,
    $gameTouch,
    contextCanvas,
    contextAudio,
    desiredSampleRate = 44100,
    appLoaded = !1,
    appViewed = !1,
    isBackToHome = !1,
    onGame = !1,
    delayassist = 500,
    clock;
document.addEventListener(inApp ? "deviceready" : "DOMContentLoaded", onDeviceReady, !1);
var tabBuffer,
    tabAnime,
    nbSound,
    nbSoundBonus,
    nbSoundTotal,
    nbSoundLoaded,
    nbBonus,
    nbBonusLoaded,
    nbAnime,
    nbAnimeLoaded,
    nbData,
    nbDataLoaded,
    nbImage,
    nbImageLoaded,
    spritePolo,
    spritePicto,
    cntTotalAsset,
    nbTotalAsset,
    tabToLoad,
    cntLoad,
    loopDuration,
    nbLoopBonus,
    nbPoloMax,
    listPolo,
    listPicto,
    listBonus = [],
    listPoloDrop = [],
    listPoloToRemove = [],
    listPoloToSolo = [],
    tabFirstSound = [],
    tabPoloOnStage = [],
    tabPoloBusy = [],
    poloAllVisible = !1,
    nbPoloToAnime = 0,
    pictoDrag = null,
    modeRandom = !1,
    modeRecord = !1,
    modeReplay = !1,
    waitForRecording = !1,
    mouseX = 0,
    mouseY = 0,
    playBar,
    readingBar,
    randomMix,
    recordMix,
    replayMix,
    isToolbarOpen = !1,
    isToolbarMove = !1,
    tabPictoOnDrag = [],
    btClockClickedAt = 0,
    curVideo = null,
    loopOn = !1,
    waitingFirstLoop = !1,
    bonusPlaying = !1,
    bonusWaiting = !1,
    bonusQueue = 0,
    pause = !1,
    boucleA = !0,
    cntBoucle = 0,
    cntBoucleBonus = 0,
    timenow,
    timespent,
    timeremain = 0,
    pctMetronome = 0,
    frame = 0,
    frameTotal = 0,
    frameHalf = 0,
    framePart2 = 0,
    stepAnimation = 0,
    stepPercent = 0,
    currentSndPart = 0,
    renderRAF,
    sndAspire,
    sndTest,
    startboucle = 0,
    pausedAt = 0,
    timeoutRender,
    onlineList = {},
    modeWatch = !1,
    mixToWatch = null,
    isMixLocal = !1,
    XHRmemotime = {},
    listByWeek = [],
    listByMonth = [],
    listByAll = [],
    listLatest = [],
    lastFilter = "",
    scrollPosY = 0,
    $lineOpened = null,
    countCheckLoaded = 0,
    RandomMix = function (a) {
        var b = this;
        (this.start = function () {
            b.loop();
        }),
            (this.stop = function () {}),
            (this.loop = function () {
                var b,
                    c = "--------\nSTART RANDOM MODE\n",
                    d = getListPoloFree(),
                    e = getListPoloBusy(),
                    f = getListPictoFree(),
                    g = getListPictoBusy(),
                    h = d.length,
                    i = e.length,
                    j = (f.length, g.length, 0),
                    k = random(6),
                    l = random(5),
                    m = random(2),
                    n = random(5) < 4 ? 2 : 1,
                    o = !1,
                    p = 0,
                    q = "ajouter";
                if (
                    ((q = m > k ? "rien" : q),
                    (q = l > k || 0 === h ? "enlever" : q),
                    (q = !loopOn || i <= 1 ? "ajouter" : q),
                    (n = !loopOn || i <= 1 ? 1 : n),
                    (q = a ? "ajouter" : q),
                    (q = a && 0 === h ? "rien" : q),
                    bonusPlaying || bonusWaiting)
                )
                    (q = "bonus"), cntBoucleBonus == nbLoopBonus && ((o = !0), (q = "enlever"));
                else
                    for (j = 0; j < nbBonus; j++) {
                        var r = listBonus[j];
                        if (r.unlock) {
                            (q = "bonus"), r.click();
                            break;
                        }
                    }
                if (((c += "mode = " + q + "\n-------------\n"), "ajouter" == q)) {
                    (p = Math.round((random(h - 1) + 1) / n)),
                        (c += "vener = " + (2 == n ? "à la cool (divise les actions par 2)" : "potentiellement vener (ne divisera pas les actions)") + "\n-------------\n"),
                        (c += "-> on ajoute " + p + " pictos\n");
                    var s = [];
                    for (j = 0; j < p; j++) (b = getRandomObject(d)), s.push(b.getId());
                    for (s.sort(), j = 0; j < p; j++) {
                        b = listPolo[s[j]];
                        var t = getRandomObject(f);
                        pictoTouchePolo(b, t, 0.03 * j), t.desactiver(), majListPoloDrop();
                    }
                } else if ("enlever" == q)
                    for (
                        p = Math.round((random(i - 2) + 1) / n),
                            p = o && i - p > 4 ? i - 4 : p,
                            c += "vener = " + (2 == n ? "à la cool (divise les actions par 2)" : "potentiellement vener (ne divisera pas les actions)") + "\n-------------\n",
                            c += "<- on supprime " + p + " polos\n",
                            j = 0;
                        j < p;
                        j++
                    )
                        (b = getRandomObject(e)),
                            b.getLoop() > 2 || o
                                ? ((c += "[polo " + b.getId() + "][picto " + b.getPicto().getId() + "]\n"), removePolo(b, 0))
                                : (c += "[polo " + b.getId() + "][picto " + b.getPicto().getId() + "] na joué que " + b.getLoop() + " boucles donc on va le laisser\n");
                else "rien" == q ? (c += "-- on fait rien\n") : "bonus" == q && (c += "-- un bonus va être lancé ou est déjà en cours, on fait rien\n");
                if (q != r) {
                    (e = getListPoloBusy()), (i = e.length);
                    var u = 0;
                    for (j = 0; j < i; j++) {
                        var v = e[j],
                            w = v.getLoop();
                        w > 7 &&
                            (u++,
                            u < i
                                ? ((c += "<-- on vire le polo " + v.getId() + " qui est là depuis " + w + " boucles\n"), removePolo(v, 0))
                                : (c += "!-- on voulait virer le polo " + v.getId() + " qui est là depuis " + w + " boucles mais cest le dernier donc on le laisse\n"));
                    }
                }
            });
    },
    RecordMix = function () {
        var a,
            b,
            c,
            d,
            e,
            f = this,
            g = decimal(loopDuration / 1e3, 2);
        (this.init = function () {
            (a = ""), (b = ""), (c = !1), (d = 0), (e = {});
        }),
            (this.setData = function (a) {
                e = a;
            }),
            (this.getData = function () {
                return e;
            }),
            (this.getXML = function () {
                return a;
            }),
            (this.start = function () {
                f.init(), (c = !0), f.xmlOpen();
            }),
            (this.loop = function () {
                f.xmlCloseAction(), f.xmlCloseLoop(), d++, f.xmlOpenLoop(), f.xmlOpenAction();
            }),
            (this.stop = function (a) {
                (c = !1), f.xmlClose();
            }),
            (this.xmlOpen = function () {
                (a = "<mix>\n"), f.xmlOpenLoop(), f.xmlOpenAction();
            }),
            (this.xmlClose = function () {
                f.xmlCloseAction(), f.xmlCloseLoop(), (a += "</mix>\n");
            }),
            (this.xmlOpenLoop = function () {
                (b = "\t<loop boucleA='" + !boucleA + "' count='" + d + "'>\n"), (b += "\t\t<stage>\n");
                for (var a = 0; a < nbPoloMax; a++) {
                    var c = listPolo[a];
                    if (c.getBusy()) {
                        var e = "";
                        (e =
                            c.getPlaying() || 0 !== c.getMoment() || 0 !== c.getLoop()
                                ? "\t\t\t<polo id='" + c.getId() + "' picto='" + c.getPicto().getId() + "' mute='" + c.getMute() + "' playing='" + c.getPlaying() + "'/>\n"
                                : "\t\t\t<polo id='" + c.getId() + "' picto='" + c.getPicto().getId() + "' mute='" + c.getMute() + "' playing='true'/>\n"),
                            (b += e);
                    }
                }
                b += "\t\t</stage>\n";
            }),
            (this.xmlCloseLoop = function () {
                (b += "\t</loop>\n"), (a += b);
            }),
            (this.xmlOpenAction = function () {
                (b += "\t\t<action>\n"), 0 === d && bonusWaiting && recordMix.xmlAction("bonus", listBonus[bonusQueue - 1], !0);
            }),
            (this.xmlCloseAction = function () {
                b += "\t\t</action>\n";
            }),
            (this.xmlAction = function (a, d, e) {
                if (c) {
                    e = void 0 !== e && e;
                    var f = decimal(getTimeSpent(!0) / 1e3, 2),
                        h = "";
                    "bonus" == a
                        ? (h += e ? "\t\t\t<user type='" + a + "' bonus='" + d.getId() + "' when='0.1'/>\n" : "\t\t\t<user type='" + a + "' bonus='" + d.getId() + "' when='" + f + "'/>\n")
                        : ((f = f > g - delayassist / 1e3 ? g : f), (h += "\t\t\t<user type='" + a + "' polo='" + d.getId() + "' picto='" + d.getPicto().getId() + "' when='" + f + "'/>\n")),
                        (b += h);
                }
            });
    },
    ReplayMix = function (a) {
        var b = this,
            c = $.parseXML(a),
            d = $(c),
            e = d.find("mix"),
            f = e.children().length,
            g = decimal(loopDuration / 1e3, 2),
            h = 0;
        (this.getTotalLoop = function () {
            return f;
        }),
            (this.start = function () {
                b.loop();
            }),
            (this.stop = function () {
                TweenMax.killTweensOf(b.appendPolo), TweenMax.killTweensOf(b.removePolo), TweenMax.killTweensOf(b.mutePolo), TweenMax.killTweensOf(b.unmutePolo), TweenMax.killTweensOf(b.launchBonus);
            }),
            (this.loop = function () {
                if (h == f) stopReplayMode();
                else {
                    var a = d.find('loop[count="' + h + '"]');
                    if (0 === h) {
                        boucleA = "true" == a.attr("boucleA");
                        var c = a.find("stage"),
                            e = 0;
                        $(c)
                            .children()
                            .each(function () {
                                var a = this.tagName;
                                if ("polo" == a) {
                                    var c = Number($(this).attr("id")),
                                        d = Number($(this).attr("picto")),
                                        f = "true" == $(this).attr("mute"),
                                        g = listPolo[c],
                                        h = listPicto[d];
                                    b.appendPolo(g, h, 0.03 * e), "false" == $(this).attr("playing") && (g.waitOneLoop = !0), f && b.mutePolo(g), e++;
                                }
                            });
                    }
                    var i = a.find("action");
                    $(i)
                        .children()
                        .each(function () {
                            var a = this.tagName;
                            if ("user" == a) {
                                var c = $(this).attr("type"),
                                    d = decimal(Number($(this).attr("when")), 2);
                                if (((d = d > g ? g : d), "bonus" == c)) {
                                    var e = Number($(this).attr("bonus"));
                                    (d = 0 === d ? 0.1 : d), (d = waitingFirstLoop ? d + delayassist / 1e3 : d), TweenMax.delayedCall(d, b.launchBonus, [e]);
                                } else {
                                    var f = Number($(this).attr("polo")),
                                        h = Number($(this).attr("picto")),
                                        i = listPolo[f],
                                        j = listPicto[h];
                                    "append" == c
                                        ? TweenMax.delayedCall(d, b.appendPolo, [i, j])
                                        : "remove" == c
                                        ? TweenMax.delayedCall(d, b.removePolo, [i])
                                        : "mute" == c
                                        ? TweenMax.delayedCall(d, b.mutePolo, [i])
                                        : "unmute" == c && TweenMax.delayedCall(d, b.unmutePolo, [i]);
                                }
                            }
                        }),
                        h++;
                }
            }),
            (this.appendPolo = function (a, b, c) {
                pictoTouchePolo(a, b, c), majListPoloDrop();
            }),
            (this.removePolo = function (a) {
                a.getBusy() && clickPolo(a);
            }),
            (this.mutePolo = function (a) {
                a.getBusy() && mutePolo(a);
            }),
            (this.unmutePolo = function (a) {
                a.getBusy() && unmutePolo(a);
            }),
            (this.launchBonus = function (a) {
                var b = listBonus[a];
                b.click();
            });
    },
    immersiveMode = !1,
    formProcessing = !1;
